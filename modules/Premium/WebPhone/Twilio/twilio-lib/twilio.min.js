/*
 The buffer module from node.js, for the browser.

 @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 @license  MIT
 */
(function e$jscomp$0(m, k, a) {
    function b(d, l) {
        if (!k[d]) {
            if (!m[d]) {
                var e = "function" == typeof require && require;
                if (!l && e)return e(d, !0);
                if (f)return f(d, !0);
                e = Error("Cannot find module '" + d + "'");
                throw e.code = "MODULE_NOT_FOUND", e;
            }
            e = k[d] = {exports: {}};
            m[d][0].call(e.exports, function (a) {
                var c = m[d][1][a];
                return b(c ? c : a)
            }, e, e.exports, e$jscomp$0, m, k, a)
        }
        return k[d].exports
    }

    for (var f = "function" == typeof require && require, d = 0; d < a.length; d++)b(a[d]);
    return b
})({
    1: [function (g, m, k) {
        Twilio = function (a) {
            var b = a || function () {
                };
            (function (a) {
                for (var d in a)b[d] = a[d]
            })(function () {
                var a = g("./twilio/util"), d;
                if ("undefined" == typeof d) {
                    d = location.protocol || "http:";
                    for (var b = "//media.twiliocdn.com/sdk/js/client/", l = document.getElementsByTagName("script"), r = RegExp("(\\w+:)?(//.*)v" + a.getPStreamVersion() + "/(twilio.min.js|twilio.js)"), c = 0; c < l.length; c++) {
                        var p = l[c].src.match(r);
                        if (p) {
                            d = p[1] || d;
                            b = p[2];
                            break
                        }
                    }
                    d += b
                }
                a.setTwilioRoot(d);
                return g("./twilio")
            }());
            return b
        }("undefined" !== typeof Twilio ? Twilio : null)
    }, {"./twilio": 2, "./twilio/util": 20}],
    2: [function (g, m, k) {
        k.Device = g("./twilio/device").Device;
        k.PStream = g("./twilio/pstream").PStream;
        k.Connection = g("./twilio/connection").Connection
    }, {"./twilio/connection": 3, "./twilio/device": 4, "./twilio/pstream": 9}],
    3: [function (g, m, k) {
        function a(n, v, f) {
            function t() {
            }

            function g() {
                var a = {
                    call_sid: h.parameters.CallSid,
                    client_name: n._clientName,
                    sdk_version: c.getReleaseVersion(),
                    selected_region: n.options.region
                };
                n.stream && (n.stream.gateway && (a.gateway = n.stream.gateway), n.stream.region && (a.region = n.stream.region));
                h._direction && (a.direction = h._direction);
                return a
            }

            function k() {
                0 !== D.length && w.postMetrics("quality-metrics-samples", "metrics-sample", D.splice(0), g())
            }

            function x(h) {
                var a = {threshold: h.threshold.value};
                h.values ? a.values = h.values.map(function (h) {
                        return "number" === typeof h ? Math.round(100 * h) / 100 : h
                    }) : h.value && (a.value = h.value);
                return {data: a}
            }

            function q(a, n) {
                var d = (/^audio/.test(n.name) ? "audio-level-" : "network-quality-") + "warning" + (a ? "-cleared" : "-raised"), c = u[n.threshold.name] + p[n.name];
                if ("constant-audio-input-level" !==
                    c || !h.isMuted()) {
                    var b = a ? "info" : "warning";
                    "constant-audio-output-level" === c && (b = "info");
                    w.post(b, d, c, x(n))
                }
            }

            if (!(this instanceof a))return new a(n, v, f);
            c.monitorEventEmitter("Twilio.Connection", this);
            this.device = n;
            this.message = v || {};
            f = f || {};
            v = {
                logPrefix: "[Connection]",
                mediaStreamFactory: l.PeerConnection,
                offerSdp: null,
                callParameters: {},
                debug: !1,
                encrypt: !1,
                audioConstraints: n.options.audioConstraints,
                rtcConstraints: n.options.rtcConstraints,
                iceServers: n.options.iceServers
            };
            for (var B in v)B in f || (f[B] =
                v[B]);
            this.options = f;
            this.parameters = f.callParameters;
            this._status = this.options.offerSdp ? "pending" : "closed";
            this._direction = this.parameters.CallSid ? "INCOMING" : "OUTGOING";
            this.sendHangup = !0;
            d.mixinLog(this, this.options.logPrefix);
            this.log.enabled = this.options.debug;
            this.log.warnings = this.options.warnings;
            this._onHangup = this._onCancel = t;
            this._onAnswer = function (a) {
                "undefined" !== typeof a.callsid && (h.parameters.CallSid = a.callsid, h.mediaStream.callSid = a.callsid)
            };
            var h = this, w = this._publisher = new e("twilio-js-sdk",
                n.token, {
                    host: n.options.eventgw, defaultPayload: function () {
                        var a = {
                            client_name: n._clientName,
                            platform: l.getMediaEngine(),
                            sdk_version: c.getReleaseVersion(),
                            selected_region: n.options.region
                        };
                        h.parameters.CallSid && !/^TJ/.test(h.parameters.CallSid) && (a.call_sid = h.parameters.CallSid);
                        h.outboundConnectionId && (a.temp_call_sid = h.outboundConnectionId);
                        n.stream && (n.stream.gateway && (a.gateway = n.stream.gateway), n.stream.region && (a.region = n.stream.region));
                        h._direction && (a.direction = h._direction);
                        return a
                    }
                });
            !1 ===
            f.publishEvents && w.disable();
            "INCOMING" === this._direction && w.info("connection", "incoming");
            var z = this._monitor = new r;
            z.disableWarnings();
            var D = [], F = 0;
            z.on("sample", function (h) {
                20 > F ? F++ : 20 === F && z.enableWarnings();
                D.push(h);
                10 <= D.length && k()
            });
            z.on("warning-cleared", q.bind(null, !0));
            z.on("warning", q.bind(null, !1));
            this.mediaStream = new this.options.mediaStreamFactory(this.options.encrypt, this.device);
            this.mediaStream.oniceconnectionstatechange = function (h) {
                w.post("failed" === h ? "error" : "debug", "ice-connection-state",
                    h)
            };
            this.mediaStream.onicegatheringstatechange = function (h) {
                w.debug("signaling-state", h)
            };
            this.mediaStream.onsignalingstatechange = function (h) {
                w.debug("signaling-state", h)
            };
            h = this;
            this.mediaStream.ondisconnect = function (a) {
                h.log(a);
                w.warn("network-quality-warning-raised", "ice-connectivity-lost", {message: a}, h);
                h.emit("error", {code: 31003, message: a, info: {code: 31003, message: a}, connection: h})
            };
            this.mediaStream.onreconnect = function (a) {
                h.log(a);
                w.info("network-quality-warning-cleared", "ice-connectivity-lost",
                    {message: a}, h)
            };
            this.mediaStream.onerror = function (a) {
                !0 === a.disconnect && h._disconnect(a.info && a.info.message);
                var n = {
                    code: a.info.code,
                    message: a.info.message || "Error with mediastream",
                    info: a.info,
                    connection: h
                };
                h.log("Received an error from MediaStream:", a);
                h.emit("error", n)
            };
            this.mediaStream.onopen = function () {
                "open" !== h._status && ("connecting" === h._status ? (h._status = "open", h.mediaStream.attachAudio(), h.emit("accept", h)) : h.mediaStream.close())
            };
            this.mediaStream.onclose = function () {
                h._status = "closed";
                h.device.sounds.disconnect() && h.device.soundcache.play("disconnect");
                z.disable();
                k();
                h.emit("disconnect", h)
            };
            this.outboundConnectionId = c.generateConnectionUUID();
            this.pstream = this.device.stream;
            this._onCancel = function (a) {
                h.parameters.CallSid == a.callsid && (h._status = "closed", h.emit("cancel"), h.pstream.removeListener("cancel", h._onCancel))
            };
            this.pstream && this.pstream.addListener("cancel", this._onCancel);
            this.on("error", function (a) {
                w.error("connection", "error", {code: a.code, message: a.message});
                h.pstream &&
                "disconnected" === h.pstream.status && b(h)
            });
            this.on("disconnect", function () {
                b(h)
            });
            return this
        }

        function b(a) {
            function n() {
                a.pstream.removeListener("answer", a._onAnswer);
                a.pstream.removeListener("cancel", a._onCancel);
                a.pstream.removeListener("hangup", a._onHangup)
            }

            n();
            setTimeout(n, 0)
        }

        m = g("events").EventEmitter;
        var f = g("./util").Exception, d = g("./log"), e = g("./eventpublisher"), l = g("./rtc"), r = g("./rtc/monitor"), c = g("./util"), p = {
            audioOutputLevel: "audio-output-level",
            audioInputLevel: "audio-input-level",
            packetsLostFraction: "packet-loss",
            jitter: "jitter",
            rtt: "rtt",
            mos: "mos"
        }, u = {min: "low-", max: "high-", maxDuration: "constant-"};
        g("util").inherits(a, m);
        a.toString = function () {
            return "[Twilio.Connection class]"
        };
        a.prototype.toString = function () {
            return "[Twilio.Connection instance]"
        };
        a.prototype.sendDigits = function (a) {
            function d(a) {
                if (a.length) {
                    var c = a.shift();
                    c.length && e.insertDTMF(c, 160, 70);
                    setTimeout(d.bind(null, a), 500)
                }
            }

            if (a.match(/[^0-9*#w]/))throw new f("Illegal character passed into sendDigits");
            for (var c = [], n = 0; n < a.length; n++) {
                var b =
                    "w" != a[n] ? "dtmf" + a[n] : "";
                "dtmf*" == b && (b = "dtmfs");
                "dtmf#" == b && (b = "dtmfh");
                c.push([b, 200, 20])
            }
            this.device.soundcache.playseq(c);
            var e = this.mediaStream.getOrCreateDTMFSender();
            if (e) {
                if (!("canInsertDTMF" in e) || e.canInsertDTMF)return this.log("Sending digits using RTCDTMFSender"), d(a.split("w"));
                this.log("RTCDTMFSender cannot insert DTMF")
            }
            this.log("Sending digits over PStream");
            null != this.pstream && "disconnected" != this.pstream.status ? (a = {
                    dtmf: a,
                    callsid: this.parameters.CallSid
                }, this.pstream.publish("dtmf",
                    a)) : (a = {error: {}}, this.emit("error", {
                    code: a.error.code || 31E3,
                    message: a.error.message || "Could not send DTMF: Signaling channel is disconnected",
                    connection: this
                }))
        };
        a.prototype.status = function () {
            return this._status
        };
        a.prototype.mute = function (a) {
            0 === arguments.length && this.log.deprecated(".mute() is deprecated. Please use .mute(true) or .mute(false) to mute or unmute a call instead.");
            if ("function" == typeof a)return this.addListener("mute", a);
            var c = this.isMuted(), d = this, n = function () {
                var a = d.isMuted();
                c != a && (d._publisher.info("connection", a ? "muted" : "unmuted"), d.emit("mute", a, d))
            };
            0 == a ? this.mediaStream.attachAudio(n) : this.mediaStream.detachAudio(n)
        };
        a.prototype.isMuted = function () {
            return !this.mediaStream.isAudioAttached()
        };
        a.prototype.unmute = function () {
            this.log.deprecated(".unmute() is deprecated. Please use .mute(false) to unmute a call instead.");
            this.mute(!1)
        };
        a.prototype.accept = function (a) {
            if ("function" == typeof a)return this.addListener("accept", a);
            var d = a || this.options.audioConstraints, c = this;
            this._status = "connecting";
            this.mediaStream.openHelper(function (a) {
                function n(a) {
                    c._publisher.info("connection", "accepted-by-local");
                    c._monitor.enable(a)
                }

                function e(a) {
                    c._publisher.info("connection", "accepted-by-remote");
                    c._monitor.enable(a)
                }

                if ("connecting" != c._status) b(c), c.mediaStream.close(); else {
                    if (a)return 31208 === a.code ? c._publisher.error("get-user-media", "denied", {
                            data: {
                                audioConstraints: d,
                                error: a.error
                            }
                        }) : c._publisher.error("get-user-media", "failed", {
                            data: {
                                audioConstraints: d,
                                error: a.error
                            }
                        }),
                        c._die(a.message, a.code);
                    c._publisher.info("get-user-media", "succeeded", {data: {audioConstraints: d}});
                    a = [];
                    for (var v in c.message)a.push(encodeURIComponent(v) + "=" + encodeURIComponent(c.message[v]));
                    v = a.join("&");
                    "INCOMING" === c._direction ? c.mediaStream.answerIncomingCall.call(c.mediaStream, c.parameters.CallSid, c.options.offerSdp, c.options.rtcConstraints, c.options.iceServers, n) : (c.pstream.once("answer", c._onAnswer), c.mediaStream.makeOutgoingCall.call(c.mediaStream, v, c.outboundConnectionId, c.options.rtcConstraints,
                            c.options.iceServers, e));
                    c._onHangup = function (a) {
                        if (a.callsid && (c.parameters.CallSid || c.outboundConnectionId)) {
                            if (a.callsid != c.parameters.CallSid && a.callsid != c.outboundConnectionId)return
                        } else if (a.callsid)return;
                        c.log("Received HANGUP from gateway");
                        a.error && (a = {
                            code: a.error.code || 31E3,
                            message: a.error.message || "Error sent from gateway in HANGUP",
                            connection: c
                        }, c.log("Received an error from the gateway:", a), c.emit("error", a));
                        c.sendHangup = !1;
                        c._publisher.info("connection", "disconnected-by-remote");
                        c._disconnect();
                        b(c)
                    };
                    c.pstream.addListener("hangup", c._onHangup)
                }
            }, d)
        };
        a.prototype.reject = function (a) {
            if ("function" == typeof a)return this.addListener("reject", a);
            "pending" == this._status && (this.pstream.publish("reject", {callsid: this.parameters.CallSid}), this.emit("reject"), this.mediaStream.reject(this.parameters.CallSid), this._publisher.info("connection", "rejected-by-local"))
        };
        a.prototype.ignore = function (a) {
            if ("function" == typeof a)return this.addListener("cancel", a);
            "pending" == this._status && (this._status =
                "closed", this.emit("cancel"), this.mediaStream.ignore(this.parameters.CallSid), this._publisher.info("connection", "ignored-by-local"))
        };
        a.prototype.cancel = function (a) {
            this.log.deprecated(".cancel() is deprecated. Please use .ignore() instead.");
            this.ignore(a)
        };
        a.prototype.disconnect = function (a) {
            if ("function" === typeof a)return this.addListener("disconnect", a);
            this._publisher.info("connection", "disconnected-by-local");
            this._disconnect()
        };
        a.prototype._disconnect = function (a) {
            a = "string" === typeof a ? a : null;
            if ("open" == this._status || "connecting" == this._status) {
                this.log("Disconnecting...");
                if (null != this.pstream && "disconnected" != this.pstream.status && this.sendHangup) {
                    var c = this.parameters.CallSid || this.outboundConnectionId;
                    c && (c = {callsid: c}, a && (c.message = a), this.pstream.publish("hangup", c))
                }
                b(this);
                this.mediaStream.close()
            }
        };
        a.prototype.error = function (a) {
            if ("function" == typeof a)return this.addListener("error", a)
        };
        a.prototype._die = function (a, c) {
            this.emit("error", {message: a, code: c});
            this._disconnect()
        };
        k.Connection =
            a
    }, {"./eventpublisher": 5, "./log": 7, "./rtc": 11, "./rtc/monitor": 13, "./util": 20, events: 24, util: 43}],
    4: [function (g, m, k) {
        function a(b, f) {
            if (!l.enabled())throw new e.Exception("twilio.js 1.3 requires WebRTC/ORTC browser support. For more information, see <https://www.twilio.com/docs/api/client/twilio-js>. If you have any questions about this announcement, please contact Twilio Support at <help@twilio.com>.");
            if (!(this instanceof a))return new a(b, f);
            e.monitorEventEmitter("Twilio.Device", this);
            if (!b)throw new e.Exception("Capability token is not valid or missing.");
            for (i in f);
            var v = {
                logPrefix: "[Device]",
                chunderw: "chunderw-vpc-gll.twilio.com",
                eventgw: "eventgw.twilio.com",
                soundCacheFactory: p,
                soundFactory: c,
                connectionFactory: u,
                pStreamFactory: n,
                noRegister: !1,
                encrypt: !1,
                closeProtection: !1,
                secureSignaling: !0,
                warnings: !0,
                audioConstraints: !0,
                iceServers: [],
                region: "gll",
                dscp: !0,
                sounds: {}
            };
            f = f || {};
            var t = f.chunderw, g;
            for (g in v)g in f || (f[g] = v[g]);
            f.rtcConstraints = f.dscp ? {optional: [{googDscp: !0}]} : {};
            this.options = f;
            this.token = b;
            this._region = this._status = "offline";
            this.connections =
                [];
            this.sounds = new r({incoming: !0, outgoing: !0, disconnect: !0});
            d.mixinLog(this, this.options.logPrefix);
            this.log.enabled = this.options.debug;
            v = {
                gll: "chunderw-vpc-gll.twilio.com",
                au1: "chunderw-vpc-gll-au1.twilio.com",
                br1: "chunderw-vpc-gll-br1.twilio.com",
                de1: "chunderw-vpc-gll-de1.twilio.com",
                ie1: "chunderw-vpc-gll-ie1.twilio.com",
                jp1: "chunderw-vpc-gll-jp1.twilio.com",
                sg1: "chunderw-vpc-gll-sg1.twilio.com",
                us1: "chunderw-vpc-gll-us1.twilio.com",
                "us1-ix": "chunderw-vpc-gll-us1-ix.twilio.com",
                "us2-ix": "chunderw-vpc-gll-us2-ix.twilio.com",
                "ie1-ix": "chunderw-vpc-gll-ie1-ix.twilio.com"
            };
            g = {au: "au1", br: "br1", ie: "ie1", jp: "jp1", sg: "sg1", "us-va": "us1", "us-or": "us1"};
            var x = f.region.toLowerCase();
            x in g && (this.log.deprecated("Region " + x + " is deprecated, please use " + g[x] + "."), x = g[x]);
            if (!(x in v))throw new e.Exception("Region " + f.region + " is invalid. Valid values are: " + Object.keys(v).join(", "));
            f.chunderw = t || v[x];
            this.soundcache = this.options.soundCacheFactory();
            t = "undefined" === typeof document ? {} : document.createElement("audio");
            canPlayMp3 = !1;
            try {
                canPlayMp3 = !(!t.canPlayType || !t.canPlayType("audio/mpeg").replace(/no/, ""))
            } catch (D) {
            }
            canPlayVorbis = !1;
            try {
                canPlayVorbis = !(!t.canPlayType || !t.canPlayType('audio/ogg;codecs="vorbis"').replace(/no/, ""))
            } catch (D) {
            }
            t = "mp3";
            canPlayVorbis && !canPlayMp3 && (t = "ogg");
            v = {
                incoming: {filename: "incoming", loop: !0},
                outgoing: {filename: "outgoing", maxDuration: 3E3},
                disconnect: {filename: "disconnect", maxDuration: 3E3},
                dtmf1: {filename: "dtmf-1", maxDuration: 1E3},
                dtmf2: {filename: "dtmf-2", maxDuration: 1E3},
                dtmf3: {
                    filename: "dtmf-3",
                    maxDuration: 1E3
                },
                dtmf4: {filename: "dtmf-4", maxDuration: 1E3},
                dtmf5: {filename: "dtmf-5", maxDuration: 1E3},
                dtmf6: {filename: "dtmf-6", maxDuration: 1E3},
                dtmf7: {filename: "dtmf-7", maxDuration: 1E3},
                dtmf8: {filename: "dtmf-8", maxDuration: 1E3},
                dtmf9: {filename: "dtmf-9", maxDuration: 1E3},
                dtmf0: {filename: "dtmf-0", maxDuration: 1E3},
                dtmfs: {filename: "dtmf-star", maxDuration: 1E3},
                dtmfh: {filename: "dtmf-hash", maxDuration: 1E3}
            };
            g = e.getTwilioRoot() + "sounds/releases/" + e.getSoundVersion() + "/";
            for (var q in v) {
                var x = v[q], k = this.options.soundFactory(x);
                k.load(g + x.filename + "." + t);
                this.soundcache.add(q, k)
            }
            this.soundcache.envelope("incoming", {release: 2E3});
            var h = this;
            this.addListener("incoming", function (a) {
                a.once("accept", function () {
                    h.soundcache.stop("incoming")
                });
                a.once("cancel", function () {
                    h.soundcache.stop("incoming")
                });
                a.once("error", function () {
                    h.soundcache.stop("incoming")
                });
                a.once("reject", function () {
                    h.soundcache.stop("incoming")
                });
                h.sounds.incoming() && h.soundcache.play("incoming", 0, 1E3)
            });
            this.mediaPresence = {audio: !this.options.noRegister};
            this.register(this.token);
            var w = this, z = this.options.closeProtection;
            z && (q = function (a) {
                if ("busy" == h._status || w.connections[0]) {
                    var c = 1 == z ? "A call is currently in-progress. Leaving or reloading this page will end the call." : z;
                    return (a || window.event).returnValue = c
                }
            }, "undefined" !== typeof window && (window.addEventListener ? window.addEventListener("beforeunload", q) : window.attachEvent && window.attachEvent("onbeforeunload", q)));
            q = function () {
                h.disconnectAll()
            };
            "undefined" !== typeof window && (window.addEventListener ? window.addEventListener("unload",
                    q) : window.attachEvent && window.attachEvent("onunload", q));
            this.on("error", function () {
            });
            return this
        }

        function b(a, c, d) {
            var b = {
                publishEvents: a.options.publishEvents,
                debug: a.options.debug,
                encrypt: a.options.encrypt,
                warnings: a.options.warnings
            };
            d = d || {};
            for (var n in b)n in d || (d[n] = b[n]);
            var e = a.options.connectionFactory(a, c, d);
            e.once("accept", function () {
                a._status = "busy";
                a.emit("connect", e)
            });
            e.addListener("error", function (c) {
                a.emit("error", c);
                "pending" == e.status() && "connecting" == e.status() && a._removeConnection(e)
            });
            e.once("cancel", function () {
                a.log("Canceled: " + e.parameters.CallSid);
                a._removeConnection(e);
                a.emit("cancel", e)
            });
            e.once("disconnect", function () {
                "busy" == a._status && (a._status = "ready");
                a.emit("disconnect", e);
                a._removeConnection(e)
            });
            e.once("reject", function () {
                a.log("Rejected: " + e.parameters.CallSid);
                a._removeConnection(e)
            });
            return e
        }

        m = g("events").EventEmitter;
        var f = g("util"), d = g("./log"), e = g("./util"), l = g("./rtc"), r = g("./options").Options, c = g("./sound").Sound, p = g("./soundcache").SoundCache, u = g("./connection").Connection,
            n = g("./pstream").PStream;
        f.inherits(a, m);
        a.toString = function () {
            return "[Twilio.Device class]"
        };
        a.prototype.toString = function () {
            return "[Twilio.Device instance]"
        };
        a.prototype.register = function (a) {
            var c = e.objectize(a);
            this._accountSid = c.iss;
            this._clientName = c.scope["client:incoming"] ? c.scope["client:incoming"].params.clientName : null;
            this.stream && "disconnected" != this.stream.status ? this.stream.setToken(a) : this._setupStream()
        };
        a.prototype.registerPresence = function () {
            this.token && (e.objectize(this.token).scope["client:incoming"] &&
            (this.mediaPresence.audio = !0), this._sendPresence())
        };
        a.prototype.unregisterPresence = function () {
            this.mediaPresence.audio = !1;
            this._sendPresence()
        };
        a.prototype.connect = function (a, c) {
            if ("function" == typeof a)return this.addListener("connect", a);
            a = a || {};
            c = c || this.options.audioConstraints;
            var d = b(this, a);
            this.connections.push(d);
            if (this.sounds.outgoing()) {
                var e = this;
                d.accept(function () {
                    e.soundcache.play("outgoing")
                })
            }
            d.accept(c);
            return d
        };
        a.prototype.disconnectAll = function () {
            for (var a = [].concat(this.connections),
                     c = 0; c < a.length; c++)a[c].disconnect();
            0 < this.connections.length && this.log("Connections left pending: " + this.connections.length)
        };
        a.prototype.destroy = function () {
            this._stopRegistrationTimer();
            this.stream && (this.stream.destroy(), this.stream = null)
        };
        a.prototype.disconnect = function (a) {
            this.addListener("disconnect", a)
        };
        a.prototype.incoming = function (a) {
            this.addListener("incoming", a)
        };
        a.prototype.offline = function (a) {
            this.addListener("offline", a)
        };
        a.prototype.ready = function (a) {
            this.addListener("ready", a)
        };
        a.prototype.error =
            function (a) {
                this.addListener("error", a)
            };
        a.prototype.status = function () {
            return this._status
        };
        a.prototype.activeConnection = function () {
            return this.connections[0]
        };
        a.prototype.region = function () {
            return this._region
        };
        a.prototype._sendPresence = function () {
            this.stream.register(this.mediaPresence);
            this.mediaPresence.audio ? this._startRegistrationTimer() : this._stopRegistrationTimer()
        };
        a.prototype._startRegistrationTimer = function () {
            clearTimeout(this.regTimer);
            var a = this;
            this.regTimer = setTimeout(function () {
                    a._sendPresence()
                },
                3E4)
        };
        a.prototype._stopRegistrationTimer = function () {
            clearTimeout(this.regTimer)
        };
        a.prototype._setupStream = function () {
            var a = this;
            this.log("Setting up PStream");
            this.stream = this.options.pStreamFactory(this.token, {
                chunderw: this.options.chunderw,
                debug: this.options.debug,
                secureSignaling: this.options.secureSignaling
            });
            this.stream.addListener("connected", function (c) {
                a._region = {
                        US_EAST_VIRGINIA: "us1",
                        US_WEST_OREGON: "us2",
                        ASIAPAC_SYDNEY: "au1",
                        SOUTH_AMERICA_SAO_PAULO: "br1",
                        EU_IRELAND: "ie1",
                        ASIAPAC_TOKYO: "jp1",
                        ASIAPAC_SINGAPORE: "sg1"
                    }[c.region] || c.region;
                a._sendPresence()
            });
            this.stream.addListener("ready", function () {
                a.log("Stream is ready");
                "offline" == a._status && (a._status = "ready");
                a.emit("ready", a)
            });
            this.stream.addListener("offline", function () {
                a.log("Stream is offline");
                a._status = "offline";
                a._region = "offline";
                a.emit("offline", a)
            });
            this.stream.addListener("error", function (c) {
                var d = c.error;
                d && (c.callsid && (d.connection = a._findConnection(c.callsid)), 31205 === d.code && a._stopRegistrationTimer(), a.log("Received error: ",
                    d), a.emit("error", d))
            });
            this.stream.addListener("invite", function (c) {
                if ("busy" == a._status) a.log("Device busy; ignoring incoming invite"); else if (c.callsid && c.sdp) {
                    var d = c.parameters || {};
                    d.CallSid = d.CallSid || c.callsid;
                    c = b(a, {}, {offerSdp: c.sdp, callParameters: d});
                    a.connections.push(c);
                    a.emit("incoming", c)
                } else a.emit("error", {message: "Malformed invite from gateway"})
            })
        };
        a.prototype._removeConnection = function (a) {
            for (var c = this.connections.length - 1; 0 <= c; c--)a == this.connections[c] && this.connections.splice(c,
                1)
        };
        a.prototype._findConnection = function (a) {
            for (var c = 0; c < this.connections.length; c++) {
                var d = this.connections[c];
                if (d.parameters.CallSid == a || d.outboundConnectionId == a)return d
            }
        };
        a = function (c) {
            var d = [], b = [], n = function (a) {
                if (c.instance)return a();
                b.push(a)
            }, f = function (a) {
                a = (a.code ? a.code + ": " : "") + a.message;
                if (c.instance) {
                    for (var h = 0, d = c.instance.listeners("error"), b = 0; b < d.length; b++)d[b] !== f && h++;
                    if (1 < h)return;
                    c.instance.log(a)
                }
                throw new e.Exception(a);
            }, x = {
                instance: null, setup: function (e, h) {
                    if (c.instance) c.instance.log("Found existing Device; using new token but ignoring options"),
                        c.instance.token = e, c.instance.register(e); else {
                        c.instance = new a(e, h);
                        c.error(f);
                        c.sounds = c.instance.sounds;
                        for (var w = 0; w < b.length; w++)b[w]();
                        b = []
                    }
                    for (w = 0; w < d.length; w++)d[w](e, h);
                    d = [];
                    return c
                }, connect: function (a, h) {
                    if ("function" == typeof a) n(function () {
                        c.instance.addListener("connect", a)
                    }); else {
                        if (!c.instance)throw new e.Exception("Run Twilio.Device.setup()");
                        if (0 < c.instance.connections.length) c.instance.emit("error", {message: "A connection is currently active"}); else return c.instance.connect(a, h)
                    }
                },
                disconnectAll: function () {
                    n(function () {
                        c.instance.disconnectAll()
                    });
                    return c
                }, disconnect: function (a) {
                    n(function () {
                        c.instance.addListener("disconnect", a)
                    });
                    return c
                }, status: function () {
                    if (!c.instance)throw new e.Exception("Run Twilio.Device.setup()");
                    return c.instance.status()
                }, region: function () {
                    if (!c.instance)throw new e.Exception("Run Twilio.Device.setup()");
                    return c.instance.region()
                }, ready: function (a) {
                    n(function () {
                        c.instance.addListener("ready", a)
                    });
                    return c
                }, error: function (a) {
                    n(function () {
                        a != f &&
                        c.instance.removeListener("error", f);
                        c.instance.addListener("error", a)
                    });
                    return c
                }, offline: function (a) {
                    n(function () {
                        c.instance.addListener("offline", a)
                    });
                    return c
                }, incoming: function (a) {
                    n(function () {
                        c.instance.addListener("incoming", a)
                    });
                    return c
                }, destroy: function () {
                    c.instance && c.instance.destroy();
                    return c
                }, cancel: function (a) {
                    n(function () {
                        c.instance.addListener("cancel", a)
                    });
                    return c
                }, activeConnection: function () {
                    return c.instance ? c.instance.activeConnection() : null
                }
            }, l;
            for (l in x)c[l] = x[l];
            return c
        }(a);
        k.Device = a
    }, {
        "./connection": 3,
        "./log": 7,
        "./options": 8,
        "./pstream": 9,
        "./rtc": 11,
        "./sound": 17,
        "./soundcache": 18,
        "./util": 20,
        events: 24,
        util: 43
    }],
    5: [function (g, m, k) {
        function a(d, b, f) {
            if (!(this instanceof a))return new a(d, b, f);
            f = Object.assign({
                defaultPayload: function () {
                    return {}
                }, host: "eventgw.twilio.com"
            }, f);
            var e = f.defaultPayload;
            "function" !== typeof e && (e = function () {
                return Object.assign({}, f.defaultPayload)
            });
            var c = !0;
            Object.defineProperties(this, {
                _defaultPayload: {value: e}, _isEnabled: {
                    get: function () {
                        return c
                    },
                    set: function (a) {
                        c = a
                    }
                }, _host: {value: f.host}, isEnabled: {
                    enumerable: !0, get: function () {
                        return c
                    }
                }, productName: {enumerable: !0, value: d}, token: {enumerable: !0, value: b}
            })
        }

        function b(a) {
            var date = new Date();
            if(a.timestamp) {
                date = (new Date(a.timestamp));
            }
            return {
                timestamp: date.toISOString(),
                total_packets_received: a.totals.packetsReceived,
                total_packets_lost: a.totals.packetsLost,
                total_packets_sent: a.totals.packetsSent,
                total_bytes_received: a.totals.bytesReceived,
                total_bytes_sent: a.totals.bytesSent,
                packets_received: a.packetsReceived,
                packets_lost: a.packetsLost,
                packets_lost_fraction: a.packetsLostFraction && Math.round(100 * a.packetsLostFraction) / 100,
                audio_level_in: a.audioInputLevel,
                audio_level_out: a.audioOutputLevel,
                codec_name: a.codecName,
                local_candidate_address: a.candidatePair.localAddress,
                local_candidate_id: a.candidatePair.localCandidateId,
                local_candidate_type: a.candidatePair.localCandidateType,
                remote_candidate_address: a.candidatePair.remoteAddress,
                remote_candidate_id: a.candidatePair.remoteCandidateId,
                remote_candidate_type: a.candidatePair.remoteCandidateType,
                candidate_transport_type: a.candidatePair.transportType,
                jitter: a.jitter,
                rtt: a.rtt,
                mos: a.mos && Math.round(100 * a.mos) / 100
            }
        }

        var f = g("./request");
        a.prototype._post = function (a, b, l, r, c, p) {
            if (!this.isEnabled && !p)return Promise.resolve();
            b = {
                publisher: this.productName,
                group: l,
                name: r,
                timestamp: (new Date).toISOString(),
                level: b.toUpperCase(),
                payload_type: "application/json",
                "private": !1,
                payload: c && c.forEach ? c.slice(0) : Object.assign(this._defaultPayload(), c)
            };
            var d = {
                url: "https://" + this._host + "/v2/" + a, body: b, headers: {
                    "Content-Type": "application/json",
                    "X-Twilio-Token": this.token
                }
            };
            return new Promise(function (a, c) {
                f.post(d, function (d) {
                    d ? c(d) : a()
                })
            })
        };
        a.prototype.post = function (a, b, f, r, c) {
            return this._post("EndpointEvents", a, b, f, r, c)
        };
        a.prototype.debug = function (a, b, f) {
            return this.post("debug", a, b, f)
        };
        a.prototype.info = function (a, b, f) {
            return this.post("info", a, b, f)
        };
        a.prototype.warn = function (a, b, f) {
            return this.post("warning", a, b, f)
        };
        a.prototype.error = function (a, b, f) {
            return this.post("error", a, b, f)
        };
        a.prototype.postMetrics = function (a, e, f, r) {
            f = f.map(b).map(function (a) {
                return Object.assign(a,
                    r)
            });
            return this._post("EndpointMetrics", "info", a, e, f)
        };
        a.prototype.enable = function () {
            this._isEnabled = !0
        };
        a.prototype.disable = function () {
            this._isEnabled = !1
        };
        m.exports = a
    }, {"./request": 10}],
    6: [function (g, m, k) {
        function a(b) {
            if (!(this instanceof a))return new a(b);
            b = b || {};
            var f = function () {
            }, f = {
                interval: 10, now: function () {
                    return (new Date).getTime()
                }, repeat: function (a, b) {
                    return setInterval(a, b)
                }, stop: function (a, b) {
                    return clearInterval(a, b)
                }, onsleep: f, onwakeup: f
            }, d;
            for (d in f)d in b || (b[d] = f[d]);
            this.interval =
                b.interval;
            this.lastbeat = 0;
            this.pintvl = null;
            this.onsleep = b.onsleep;
            this.onwakeup = b.onwakeup;
            this.repeat = b.repeat;
            this.stop = b.stop;
            this.now = b.now
        }

        a.toString = function () {
            return "[Twilio.Heartbeat class]"
        };
        a.prototype.toString = function () {
            return "[Twilio.Heartbeat instance]"
        };
        a.prototype.beat = function () {
            this.lastbeat = this.now();
            if (this.sleeping()) {
                if (this.onwakeup) this.onwakeup();
                var a = this;
                this.pintvl = this.repeat.call(null, function () {
                    a.check()
                }, 1E3 * this.interval)
            }
        };
        a.prototype.check = function () {
            var a = this.now() -
                this.lastbeat;
            if (!this.sleeping() && a >= 1E3 * this.interval) {
                if (this.onsleep) this.onsleep();
                this.stop.call(null, this.pintvl);
                this.pintvl = null
            }
        };
        a.prototype.sleeping = function () {
            return null == this.pintvl
        };
        k.Heartbeat = a
    }, {}],
    7: [function (g, m, k) {
        k.mixinLog = function (a, b) {
            function f() {
                if (f.enabled)for (var a = f.prefix ? f.prefix + " " : "", b = 0; b < arguments.length; b++) {
                    var l = arguments[b];
                    f.handler("string" == typeof l ? a + l : l)
                }
            }

            f.enabled = !0;
            f.prefix = b || "";
            f.defaultHandler = function (a) {
                "undefined" !== typeof console && console.log(a)
            };
            f.handler = f.defaultHandler;
            f.warnings = !0;
            f.defaultWarnHandler = function (a) {
                "undefined" !== typeof console && ("function" === typeof console.warn ? console.warn(a) : "function" === typeof console.log && console.log(a))
            };
            f.warnHandler = f.defaultWarnHandler;
            f.deprecated = function () {
                if (f.warnings)for (var a = 0; a < arguments.length; a++)f.warnHandler(arguments[a])
            };
            a.log = f
        }
    }, {}],
    8: [function (g, m, k) {
        g = function () {
            function a(f, d) {
                if (!(this instanceof a))return new a(f);
                this.__dict__ = {};
                f = f || {};
                d = d || {};
                for (var e in f)this[e] = b(this.__dict__,
                    e), this[e](f[e]);
                for (e in d)this[e](d[e])
            }

            function b(a, b) {
                return function (d) {
                    return "undefined" == typeof d ? a[b] : a[b] = d
                }
            }

            return a
        }();
        k.Options = g
    }, {}],
    9: [function (g, m, k) {
        function a(b, r) {
            if (!(this instanceof a))return new a(b, r);
            d.monitorEventEmitter("Twilio.PStream", this);
            var c = {
                logPrefix: "[PStream]",
                chunderw: "chunderw-vpc-gll.twilio.com",
                secureSignaling: !0,
                transportFactory: e,
                debug: !1
            };
            r = r || {};
            for (var p in c)p in r || (r[p] = c[p]);
            this.options = r;
            this.token = b || "";
            this.status = "disconnected";
            this.host = this.options.chunderw;
            this.region = this.gateway = null;
            f.mixinLog(this, this.options.logPrefix);
            this.log.enabled = this.options.debug;
            this.on("error", function () {
            });
            var l = this;
            this.addListener("ready", function () {
                l.status = "ready"
            });
            this.addListener("offline", function () {
                l.status = "offline"
            });
            this.addListener("close", function () {
                l.destroy()
            });
            this.transport = this.options.transportFactory({
                host: this.host,
                debug: this.options.debug,
                secureSignaling: this.options.secureSignaling
            });
            this.transport.onopen = function () {
                l.status = "connected";
                l.setToken(l.token)
            };
            this.transport.onclose = function () {
                "disconnected" != l.status && ("offline" != l.status && l.emit("offline", l), l.status = "disconnected")
            };
            this.transport.onerror = function (a) {
                l.emit("error", a)
            };
            this.transport.onmessage = function (a) {
                a = d.splitObjects(a.data);
                for (var c = 0; c < a.length; c++) {
                    var b = JSON.parse(a[c]), n = b.type, b = b.payload || {};
                    b.gateway && (l.gateway = b.gateway);
                    b.region && (l.region = b.region);
                    l.emit(n, b)
                }
            };
            this.transport.open();
            return this
        }

        m = g("events").EventEmitter;
        var b = g("util"), f = g("./log"), d = g("./util");
        g("./rtc");
        g("./heartbeat");
        var e = g("./wstransport").WSTransport;
        b.inherits(a, m);
        a.toString = function () {
            return "[Twilio.PStream class]"
        };
        a.prototype.toString = function () {
            return "[Twilio.PStream instance]"
        };
        a.prototype.setToken = function (a) {
            this.log("Setting token and publishing listen");
            this.token = a;
            a = {token: a, browserinfo: d.getSystemInfo()};
            this.publish("listen", a)
        };
        a.prototype.register = function (a) {
            this.publish("register", {media: a})
        };
        a.prototype.destroy = function () {
            this.log("Closing PStream");
            this.transport.close();
            return this
        };
        a.prototype.publish = function (a, b) {
            var c = JSON.stringify({type: a, version: d.getPStreamVersion(), payload: b});
            this.transport.send(c)
        };
        k.PStream = a
    }, {"./heartbeat": 6, "./log": 7, "./rtc": 11, "./util": 20, "./wstransport": 21, events: 24, util: 43}],
    10: [function (g, m, k) {
        var a = "undefined" === typeof XMLHttpRequest ? g("xmlhttprequest").XMLHttpRequest : XMLHttpRequest;
        g = function (b, f, d) {
            var e;
            e = e || a;
            var l = new e;
            l.open(b, f.url, !0);
            l.onreadystatechange = function () {
                4 === l.readyState && (200 <= l.status && 300 > l.status ? d(null,
                        l.responseText) : d(Error(l.responseText)))
            };
            for (var r in f.headers)l.setRequestHeader(r, f.headers[r]);
            l.send(JSON.stringify(f.body))
        };
        g.get = function (a, f) {
            return new this("GET", a, f)
        };
        g.post = function (a, f) {
            return new this("POST", a, f)
        };
        m.exports = g
    }, {xmlhttprequest: 45}],
    11: [function (g, m, k) {
        var a = g("./peerconnection");
        m.exports = {
            enabled: function (b) {
                "undefined" !== typeof b && (a.enabled = b);
                return a.enabled
            }, getMediaEngine: function () {
                return "undefined" !== typeof RTCIceGatherer ? "ORTC" : "WebRTC"
            }, PeerConnection: a
        }
    },
        {"./peerconnection": 15}],
    12: [function (g, m, k) {
        function a(c) {
            if (!(this instanceof a))return new a(c);
            var b = this;
            Object.defineProperties(this, {
                size: {
                    enumerable: !0, get: function () {
                        return b._map.size
                    }
                }, _map: {value: c}
            });
            this[Symbol.iterator] = c[Symbol.iterator]
        }

        function b(a) {
            return {
                type: "transport",
                id: a.id,
                timestamp: Date.parse(a.timestamp),
                bytesSent: void 0,
                bytesReceived: void 0,
                rtcpTransportStatsId: void 0,
                dtlsState: void 0,
                selectedCandidatePairId: a.stat("selectedCandidatePairId"),
                localCertificateId: a.stat("localCertificateId"),
                remoteCertificateId: a.stat("remoteCertificateId")
            }
        }

        function f(a) {
            return {
                type: "codec",
                id: a.id,
                timestamp: Date.parse(a.timestamp),
                payloadType: void 0,
                mimeType: a.stat("mediaType") + "/" + a.stat("googCodecName"),
                clockRate: void 0,
                channels: void 0,
                sdpFmtpLine: void 0,
                implementation: void 0
            }
        }

        function d(a) {
            return {
                type: "track",
                id: a.id,
                timestamp: Date.parse(a.timestamp),
                trackIdentifier: a.stat("googTrackId"),
                remoteSource: void 0,
                ended: void 0,
                kind: a.stat("mediaType"),
                detached: void 0,
                ssrcIds: void 0,
                frameWidth: y(a, "googFrameWidthReceived") ?
                    t(a, "googFrameWidthReceived") : t(a, "googFrameWidthSent"),
                frameHeight: y(a, "googFrameHeightReceived") ? t(a, "googFrameHeightReceived") : t(a, "googFrameHeightSent"),
                framesPerSecond: void 0,
                framesSent: t(a, "framesEncoded"),
                framesReceived: void 0,
                framesDecoded: t(a, "framesDecoded"),
                framesDropped: void 0,
                framesCorrupted: void 0,
                partialFramesLost: void 0,
                fullFramesLost: void 0,
                audioLevel: y(a, "audioOutputLevel") ? t(a, "audioOutputLevel") / 32767 : (t(a, "audioInputLevel") || 0) / 32767,
                echoReturnLoss: C(a, "googEchoCancellationReturnLoss"),
                echoReturnLossEnhancement: C(a, "googEchoCancellationReturnLossEnhancement")
            }
        }

        function e(a, c) {
            return {
                id: a.id,
                timestamp: Date.parse(a.timestamp),
                ssrc: a.stat("ssrc"),
                associateStatsId: void 0,
                isRemote: void 0,
                mediaType: a.stat("mediaType"),
                trackId: "track-" + a.id,
                transportId: a.stat("transportId"),
                codecId: "codec-" + a.id,
                firCount: c ? t(a, "googFirsSent") : void 0,
                pliCount: c ? t(a, "googPlisSent") : t(a, "googPlisReceived"),
                nackCount: c ? t(a, "googNacksSent") : t(a, "googNacksReceived"),
                sliCount: void 0,
                qpSum: t(a, "qpSum")
            }
        }

        function l(a) {
            var c =
                e(a, !0);
            Object.assign(c, {
                type: "inbound-rtp",
                packetsReceived: t(a, "packetsReceived"),
                bytesReceived: t(a, "bytesReceived"),
                packetsLost: t(a, "packetsLost"),
                jitter: v(a.stat("googJitterReceived")),
                fractionLost: void 0,
                roundTripTime: v(a.stat("googRtt")),
                packetsDiscarded: void 0,
                packetsRepaired: void 0,
                burstPacketsLost: void 0,
                burstPacketsDiscarded: void 0,
                burstLossCount: void 0,
                burstDiscardCount: void 0,
                burstLossRate: void 0,
                burstDiscardRate: void 0,
                gapLossRate: void 0,
                gapDiscardRate: void 0,
                framesDecoded: t(a, "framesDecoded")
            });
            return c
        }

        function r(a) {
            var c = e(a, !1);
            Object.assign(c, {
                type: "outbound-rtp",
                remoteTimestamp: void 0,
                packetsSent: t(a, "packetsSent"),
                bytesSent: t(a, "bytesSent"),
                targetBitrate: void 0,
                framesEncoded: t(a, "framesEncoded")
            });
            return c
        }

        function c(a, c) {
            var b = a.id, h = Date.parse(a.timestamp), d = a.stat("ipAddress"), n = t(a, "portNumber"), e = a.stat("transport"), f;
            a:switch (f = a.stat("candidateType"), f) {
                case "peerreflexive":
                    f = "prflx";
                    break a;
                case "serverreflexive":
                    f = "srflx"
            }
            return {
                type: c ? "remote-candidate" : "local-candidate",
                id: b,
                timestamp: h,
                transportId: void 0,
                isRemote: c,
                ip: d,
                port: n,
                protocol: e,
                candidateType: f,
                priority: C(a, "priority"),
                url: void 0,
                relayProtocol: void 0,
                deleted: void 0
            }
        }

        function p(a) {
            return {
                type: "candidate-pair",
                id: a.id,
                timestamp: Date.parse(a.timestamp),
                transportId: a.stat("googChannelId"),
                localCandidateId: a.stat("localCandidateId"),
                remoteCandidateId: a.stat("remoteCandidateId"),
                state: void 0,
                priority: void 0,
                nominated: void 0,
                writable: A(a, "googWritable"),
                readable: void 0,
                bytesSent: t(a, "bytesSent"),
                bytesReceived: t(a,
                    "bytesReceived"),
                lastPacketSentTimestamp: void 0,
                lastPacketReceivedTimestamp: void 0,
                totalRoundTripTime: void 0,
                currentRoundTripTime: v(a.stat("googRtt")),
                availableOutgoingBitrate: void 0,
                availableIncomingBitrate: void 0,
                requestsReceived: t(a, "requestsReceived"),
                requestsSent: t(a, "requestsSent"),
                responsesReceived: t(a, "responsesReceived"),
                responsesSent: t(a, "responsesSent"),
                retransmissionsReceived: void 0,
                retransmissionsSent: void 0,
                consentRequestsSent: t(a, "consentRequestsSent")
            }
        }

        function u(a) {
            return {
                type: "certificate",
                id: a.id,
                timestamp: Date.parse(a.timestamp),
                fingerprint: a.stat("googFingerprint"),
                fingerprintAlgorithm: a.stat("googFingerprintAlgorithm"),
                base64Certificate: a.stat("googDerBase64"),
                issuerCertificateId: a.stat("googIssuerId")
            }
        }

        function n(a) {
            return {
                type: "data-channel",
                id: a.id,
                timestamp: Date.parse(a.timestamp),
                label: a.stat("label"),
                protocol: a.stat("protocol"),
                datachannelid: a.stat("datachannelid"),
                transportId: a.stat("transportId"),
                state: a.stat("state"),
                messagesSent: void 0,
                bytesSent: void 0,
                messagesReceived: void 0,
                bytesReceived: void 0
            }
        }

        function v(a) {
            return parseInt(a, 10) / 1E3 || void 0
        }

        function t(a, c) {
            var b = a.stat(c);
            return y(a, c) ? parseInt(b, 10) : void 0
        }

        function C(a, c) {
            var b = a.stat(c);
            return y(a, c) ? parseFloat(b) : void 0
        }

        function A(a, c) {
            var b = a.stat(c);
            return y(a, c) ? "true" === b || !0 === b : void 0
        }

        function y(a, c) {
            var b = a.stat(c);
            return "undefined" !== typeof b && "" !== b
        }

        if (g = "undefined" !== typeof window ? window.RTCStatsReport : void 0) a.prototype = Object.create(g.prototype), a.prototype.constructor = a;
        "entries forEach get has keys values".split(" ").forEach(function (c) {
            a.prototype[c] =
                function () {
                    return this._map[c].apply(this._map, arguments)
                }
        });
        a.fromArray = function (c) {
            return new a(c.reduce(function (a, c) {
                a.set(c.id, c);
                return a
            }, new Map))
        };
        a.fromRTCStatsResponse = function (e) {
            var v, g = new Map;
            e = e.result().reduce(function (a, h) {
                var e = h.id;
                switch (h.type) {
                    case "googCertificate":
                        a.set(e, u(h));
                        break;
                    case "datachannel":
                        a.set(e, n(h));
                        break;
                    case "googCandidatePair":
                        A(h, "googActiveConnection") && (v = e);
                        a.set(e, p(h));
                        break;
                    case "localcandidate":
                        a.set(e, c(h, !1));
                        break;
                    case "remotecandidate":
                        a.set(e,
                            c(h, !0));
                        break;
                    case "ssrc":
                        y(h, "packetsReceived") ? a.set("rtp-" + e, l(h)) : a.set("rtp-" + e, r(h));
                        a.set("track-" + e, d(h));
                        a.set("codec-" + e, f(h));
                        break;
                    case "googComponent":
                        var w = b(h);
                        g.set(w.selectedCandidatePairId, e);
                        a.set(e, b(h))
                }
                return a
            }, new Map);
            if (v) {
                var h = g.get(v);
                h && (e.get(h).dtlsState = "connected")
            }
            return new a(e)
        };
        m.exports = a
    }, {}],
    13: [function (g, m, k) {
        function a(c) {
            if (!(this instanceof a))return new a(c);
            c = c || {};
            var b = Object.assign({}, r, c.thresholds);
            Object.defineProperties(this, {
                _activeWarnings: {value: new Map},
                _currentStreaks: {value: new Map},
                _peerConnection: {value: c.peerConnection, writable: !0},
                _sampleBuffer: {value: []},
                _sampleInterval: {value: null, writable: !0},
                _thresholds: {value: b},
                _warningsEnabled: {value: !0, writable: !0}
            });
            c.peerConnection && this.enable();
            d.call(this)
        }

        function b(a, b) {
            return b.reduce(function (c, b) {
                return c + (b < a ? 1 : 0)
            }, 0)
        }

        function f(a, b) {
            return b.reduce(function (c, b) {
                return c + (b > a ? 1 : 0)
            }, 0)
        }

        var d = g("events").EventEmitter, e = g("./stats");
        k = g("util").inherits;
        var l = g("./mos"), r = {
            audioInputLevel: {maxDuration: 10},
            audioOutputLevel: {maxDuration: 10},
            packetsLostFraction: {max: 1},
            jitter: {max: 30},
            rtt: {max: 400},
            mos: {min: 3}
        };
        k(a, d);
        a.createSample = function (a, b) {
            var c = a.packetsReceived - (b && b.totals.packetsReceived || 0), d = a.packetsLost - (b && b.totals.packetsLost || 0), e = c + d, e = 0 < e ? d / e * 100 : 100, f = a.packetsReceived + a.packetsLost;
            return {
                timestamp: a.timestamp,
                totals: {
                    packetsReceived: a.packetsReceived,
                    packetsLost: a.packetsLost,
                    packetsSent: a.packetsSent,
                    packetsLostFraction: 0 < f ? a.packetsLost / f * 100 : 100,
                    bytesReceived: a.bytesReceived,
                    bytesSent: a.bytesSent
                },
                candidatePair: {
                    localAddress: a.localAddress,
                    localCandidateId: a.localCandidateId,
                    localCandidateType: a.localCandidateType,
                    remoteAddress: a.remoteAddress,
                    remoteCandidateId: a.remoteCandidateId,
                    remoteCandidateType: a.remoteCandidateType,
                    transportType: a.transportType
                },
                packetsSent: a.packetsSent - (b && b.totals.packetsSent || 0),
                packetsReceived: c,
                packetsLost: d,
                packetsLostFraction: e,
                audioInputLevel: a.audioInputLevel,
                audioOutputLevel: a.audioOutputLevel,
                codecName: a.codecName,
                jitter: a.jitter,
                rtt: a.rtt,
                mos: l.calculate(a, b && e)
            }
        };
        a.prototype.enable = function (a) {
            if (a) {
                if (this._peerConnection && a !== this._peerConnection)throw Error("Attempted to replace an existing PeerConnection in RTCMonitor.enable");
                this._peerConnection = a
            }
            if (!this._peerConnection)throw Error("Can not enable RTCMonitor without a PeerConnection");
            this._sampleInterval = this._sampleInterval || setInterval(this._fetchSample.bind(this), 1E3);
            return this
        };
        a.prototype.disable = function () {
            clearInterval(this._sampleInterval);
            this._sampleInterval =
                null;
            return this
        };
        a.prototype.getSample = function () {
            var c = this;
            return e(this._peerConnection).then(function (b) {
                return a.createSample(b, c._sampleBuffer.length && c._sampleBuffer[c._sampleBuffer.length - 1])
            })
        };
        a.prototype._fetchSample = function (a) {
            var c = this;
            return this.getSample().then(function (a) {
                c._addSample(a);
                c._raiseWarnings();
                c.emit("sample", a);
                return a
            }, function (a) {
                c.disable();
                c.emit("error", a)
            })
        };
        a.prototype._addSample = function (a) {
            var c = this._sampleBuffer;
            c.push(a);
            5 < c.length && c.splice(0, c.length -
                5)
        };
        a.prototype._raiseWarnings = function () {
            if (this._warningsEnabled)for (var a in this._thresholds)this._raiseWarningsForStat(a)
        };
        a.prototype.enableWarnings = function () {
            this._warningsEnabled = !0;
            return this
        };
        a.prototype.disableWarnings = function () {
            this._warningsEnabled && this._activeWarnings.clear();
            this._warningsEnabled = !1;
            return this
        };
        a.prototype._raiseWarningsForStat = function (a) {
            var c = this._sampleBuffer, d = this._thresholds[a], e = c.slice(-5), e = e.map(function (c) {
                return c[a]
            });
            if (!e.some(function (a) {
                    return "undefined" === typeof a || null === a
                })) {
                if ("number" === typeof d.max) {
                    var l = f(d.max, e);
                    3 <= l ? this._raiseWarning(a, "max", {values: e}) : 0 >= l && this._clearWarning(a, "max", {values: e})
                }
                "number" === typeof d.min && (l = b(d.min, e), 3 <= l ? this._raiseWarning(a, "min", {values: e}) : 0 >= l && this._clearWarning(a, "min", {values: e}));
                "number" === typeof d.maxDuration && 1 < c.length && (e = c.slice(-2), c = e[0][a], l = e[1][a], e = this._currentStreaks.get(a) || 0, c = c === l ? e + 1 : 0, this._currentStreaks.set(a, c), c >= d.maxDuration ? this._raiseWarning(a, "maxDuration", {value: c}) :
                    0 === c && this._clearWarning(a, "maxDuration", {value: e}))
            }
        };
        a.prototype._clearWarning = function (a, b, d) {
            var c = a + ":" + b, e = this._activeWarnings.get(c);
            !e || 5E3 > Date.now() - e.timeRaised || (this._activeWarnings["delete"](c), this.emit("warning-cleared", Object.assign({
                name: a,
                threshold: {name: b, value: this._thresholds[a][b]}
            }, d)))
        };
        a.prototype._raiseWarning = function (a, b, d) {
            var c = a + ":" + b;
            this._activeWarnings.has(c) || (this._activeWarnings.set(c, {timeRaised: Date.now()}), this.emit("warning", Object.assign({
                name: a, threshold: {
                    name: b,
                    value: this._thresholds[a][b]
                }
            }, d)))
        };
        m.exports = a
    }, {"./mos": 14, "./stats": 16, events: 24, util: 43}],
    14: [function (g, m, k) {
        m.exports = {
            calculate: function (a, b) {
                if (!a || "number" !== typeof a.rtt || "number" !== typeof a.jitter || "number" !== typeof a.packetsLost || "number" !== typeof b)return null;
                var f, d = a.rtt + 2 * a.jitter + 10;
                f = 0;
                switch (!0) {
                    case 160 > d:
                        f = 94.768 - d / 40;
                        break;
                    case 1E3 > d:
                        f = 94.768 - (d - 120) / 10;
                        break;
                    case 1E3 <= d:
                        f = 94.768 - d / 100
                }
                d = .01;
                switch (!0) {
                    case -1 === b:
                        f = d = 0;
                        break;
                    case b <= f / 2.5:
                        d = 2.5;
                        break;
                    case b > f / 2.5 && 100 > b:
                        d =
                            .25
                }
                f -= b * d;
                f = 1 + .035 * f + 7E-6 * f * (f - 60) * (100 - f);
                return 1 <= f && 4.6 > f ? f : null
            }
        }
    }, {}],
    15: [function (g, m, k) {
        function a(c, b) {
            if (!(this instanceof a))return new a(c, b);
            var d = function () {
            };
            this.onicecandidate = this.oniceconnectionstatechange = this.onsignalingstatechange = this.onreconnect = this.ondisconnect = this.onclose = this.onerror = this.onopen = d;
            this.version = null;
            this.pstream = b.stream;
            this.stream = null;
            this.video = "undefined" !== typeof document && document.createElement("video");
            this.video.autoplay = "autoplay";
            this.device =
                b;
            this.status = "connecting";
            this._dtmfSender = this.callSid = null;
            this._dtmfSenderUnsupported = !1;
            this._callEvents = [];
            this._nextTimeToPublish = Date.now();
            this._onAnswer = d;
            f.mixinLog(this, "[Twilio.PeerConnection]");
            this.log.enabled = this.device.options.debug;
            this.log.warnings = this.device.options.warnings;
            this._iceConnectionStateMachine = new e(l, "new");
            this._signalingStateMachine = new e(r, "stable");
            return this
        }

        function b(a) {
            "function" === typeof MediaStreamTrack.prototype.stop ? ("function" === typeof a.getAudioTracks ?
                    a.getAudioTracks() : a.audioTracks).forEach(function (a) {
                    a.stop()
                }) : a.stop()
        }

        var f = g("../log"), d = g("ortc-adapter");
        g("stacktrace-js");
        var e = g("../statemachine");
        g("../util");
        var l = {
            "new": ["checking", "closed"],
            checking: ["new", "connected", "failed", "closed", "completed"],
            connected: ["new", "disconnected", "completed", "closed"],
            completed: ["new", "disconnected", "closed", "completed"],
            failed: ["new", "disconnected", "closed"],
            disconnected: ["connected", "completed", "failed", "closed"],
            closed: []
        }, r = {
            stable: ["have-local-offer",
                "have-remote-offer", "closed"],
            "have-local-offer": ["stable", "closed"],
            "have-remote-offer": ["stable", "closed"],
            closed: []
        };
        a.prototype.uri = function () {
            return this._uri
        };
        a.prototype.openHelper = function (c, b) {
            var d = this;
            a.getUserMedia({audio: b}, function (a) {
                d.stream = a;
                c()
            }, function (a) {
                a.code && a.code === a.PERMISSION_DENIED || a.name && "PermissionDeniedError" === a.name ? c({
                        error: a,
                        message: "User denied access to microphone, or the web browser did not allow microphone access at this address.",
                        code: 31208
                    }) : c({
                        error: a,
                        message: "Error occurred while accessing microphone: " + a.name + (a.message ? " (" + a.message + ")" : ""),
                        code: 31201
                    })
            })
        };
        a.prototype._setupPeerConnection = function (c, b) {
            var d = a.protocol;
            d.create(this.log, c, b);
            d.pc.addStream(this.stream);
            var e = this;
            d.pc.onaddstream = function (a) {
                "undefined" !== typeof e.video.srcObject ? e.video.srcObject = a.stream : "undefined" !== typeof e.video.mozSrcObject ? e.video.mozSrcObject = a.stream : "undefined" !== typeof e.video.src ? e.video.src = (window.URL || window.webkitURL).createObjectURL(a.stream) :
                            e.log("Error attaching stream to element.")
            };
            return d
        };
        a.prototype._setupChannel = function () {
            var a = this, b = this.version.pc;
            a.version.pc.onopen = function () {
                a.status = "open";
                a.onopen()
            };
            a.version.pc.onstatechange = function (c) {
                a.version.pc && "stable" == a.version.pc.readyState && (a.status = "open", a.onopen())
            };
            a.version.pc.onsignalingstatechange = function (c) {
                c = b.signalingState;
                a.log('signalingState is "' + c + '"');
                try {
                    a._signalingStateMachine.transition(c)
                } catch (n) {
                }
                a.version.pc && "stable" == a.version.pc.signalingState &&
                (a.status = "open", a.onopen());
                a.onsignalingstatechange(b.signalingState)
            };
            b.onicecandidate = function (c) {
                a.onicecandidate(c.candidate)
            };
            b.oniceconnectionstatechange = function () {
                var c = b.iceConnectionState, d = a._iceConnectionStateMachine.currentState;
                try {
                    a._iceConnectionStateMachine.transition(c)
                } catch (v) {
                }
                switch (c) {
                    case "connected":
                        "disconnected" === d && (d = "ICE liveliness check succeeded. Connection with Twilio restored", a.log(d), a.onreconnect(d));
                        break;
                    case "disconnected":
                        d = "ICE liveliness check failed. May be having trouble connecting to Twilio";
                        a.log(d);
                        a.ondisconnect(d);
                        break;
                    case "failed":
                        d = ("checking" === d ? "ICE negotiation with Twilio failed." : "Connection with Twilio was interrupted.") + " Call will terminate.";
                        a.log(d);
                        a.onerror({info: {code: 31003, message: d}, disconnect: !0});
                        break;
                    default:
                        a.log('iceConnectionState is "' + c + '"')
                }
                a.oniceconnectionstatechange(c)
            }
        };
        a.prototype._initializeMediaStream = function (a, b) {
            if ("open" == this.status)return !1;
            if ("disconnected" == this.pstream.status)return this.onerror({
                info: {
                    code: 31E3,
                    message: "Cannot establish connection. Client is disconnected"
                }
            }),
                this.close(), !1;
            this.version = this._setupPeerConnection(a, b);
            this._setupChannel();
            return !0
        };
        a.prototype.makeOutgoingCall = function (a, b, d, e, f) {
            if (this._initializeMediaStream(d, e)) {
                var c = this;
                this.callSid = b;
                var n = function () {
                    f(c.version.pc)
                }, l = function (a) {
                    c.onerror({info: {code: 31E3, message: "Error processing answer: " + (a.message || a)}})
                };
                this._onAnswer = function (a) {
                    "closed" != c.status && c.version.processAnswer(a.sdp, n, l)
                };
                this.pstream.once("answer", this._onAnswer);
                this.version.createOffer({audio: !0}, function () {
                    "closed" !=
                    c.status && c.pstream.publish("invite", {
                        sdp: c.version.getSDP(),
                        callsid: c.callSid,
                        twilio: {params: a}
                    })
                }, function (a) {
                    c.onerror({info: {code: 31E3, message: "Error creating the offer: " + (a.message || a)}})
                })
            }
        };
        a.prototype.answerIncomingCall = function (a, b, d, e, f) {
            if (this._initializeMediaStream(d, e)) {
                this.callSid = a;
                var c = this;
                this.version.processSDP(b, {audio: !0}, function () {
                    "closed" != c.status && (c.pstream.publish("answer", {
                        callsid: a,
                        sdp: c.version.getSDP()
                    }), f(c.version.pc))
                }, function (a) {
                    c.onerror({
                        info: {
                            code: 31E3,
                            message: "Error creating the answer: " + (a.message || a)
                        }
                    })
                })
            }
        };
        a.prototype.close = function () {
            this.version && this.version.pc && ("closed" !== this.version.pc.signalingState && this.version.pc.close(), this.version.pc = null);
            this.stream && (b(this.stream), this.stream = null);
            this.pstream && this.pstream.removeListener("answer", this._onAnswer);
            this.video.src = "";
            this.status = "closed";
            this.onclose()
        };
        a.prototype.reject = function (a) {
            this.callSid = a
        };
        a.prototype.ignore = function (a) {
            this.callSid = a
        };
        a.prototype.attachAudio = function (a) {
            this.stream &&
            (("function" === typeof this.stream.getAudioTracks ? this.stream.getAudioTracks() : this.stream.audioTracks)[0].enabled = !0);
            a && "function" == typeof a && a()
        };
        a.prototype.detachAudio = function (a) {
            this.stream && (("function" === typeof this.stream.getAudioTracks ? this.stream.getAudioTracks() : this.stream.audioTracks)[0].enabled = !1);
            a && "function" == typeof a && a()
        };
        a.prototype.isAudioAttached = function () {
            return this.stream ? ("function" === typeof this.stream.getAudioTracks ? this.stream.getAudioTracks() : this.stream.audioTracks)[0].enabled :
                !1
        };
        a.getUserMedia = function (a, b, d) {
            "undefined" != typeof navigator && ("function" == typeof navigator.webkitGetUserMedia ? navigator.webkitGetUserMedia(a, b, d) : "function" == typeof navigator.mozGetUserMedia ? navigator.mozGetUserMedia(a, b, d) : "function" === typeof navigator.getUserMedia ? navigator.getUserMedia(a, b, d) : this.log("No getUserMedia() implementation available"))
        };
        a.prototype.getOrCreateDTMFSender = function () {
            if (this._dtmfSender)return this._dtmfSender;
            if (this._dtmfSenderUnsupported)return null;
            var a = this.version.pc;
            if (!a)return this.log("No RTCPeerConnection available to call createDTMFSender on"), null;
            for (var b = a.getLocalStreams(), d, e, f = 0; f < b.length; f++)if (d = b[f], d = "function" === typeof d.getAudioTracks ? d.getAudioTracks() : d.audioTracks, d.length) {
                e = d[0];
                break
            }
            if (!e)return this.log("No local audio MediaStreamTrack available on the RTCPeerConnection to pass to createDTMFSender"), null;
            if ("function" === typeof a.getSenders && (b = a.getSenders().find(function (a) {
                    return a.track === e
                }), b.dtmf))return this.log("Using RTCRtpSender#dtmf"),
                this._dtmfSender = b.dtmf;
            if ("function" === typeof a.createDTMFSender)return this.log("Creating RTCDTMFSender"), this._dtmfSender = a.createDTMFSender(e);
            this.log("RTCPeerConnection does not support RTCDTMFSender");
            this._dtmfSenderUnsupported = !0;
            return null
        };
        g = function () {
            "undefined" != typeof window && ("function" == typeof window.webkitRTCPeerConnection ? this.RTCPeerConnection = webkitRTCPeerConnection : "function" == typeof window.mozRTCPeerConnection ? (this.RTCPeerConnection = mozRTCPeerConnection, RTCSessionDescription =
                        mozRTCSessionDescription, RTCIceCandidate = mozRTCIceCandidate) : "undefined" !== typeof RTCIceGatherer ? (this.RTCPeerConnection = d.RTCPeerConnection, RTCSessionDescription = d.RTCSessionDescription, RTCIceCandidate = d.RTCIceCandidate) : this.log("No RTCPeerConnection implementation available"))
        };
        g.prototype.create = function (a, b, d) {
            this.log = a;
            this.pc = new this.RTCPeerConnection({iceServers: d}, b)
        };
        g.prototype.createModernConstraints = function (a) {
            if ("undefined" === typeof a)return null;
            var c = {};
            "undefined" !== typeof webkitRTCPeerConnection ?
                (c.mandatory = {}, "undefined" !== typeof a.audio && (c.mandatory.OfferToReceiveAudio = a.audio), "undefined" !== typeof a.video && (c.mandatory.OfferToReceiveVideo = a.video)) : ("undefined" !== typeof a.audio && (c.offerToReceiveAudio = a.audio), "undefined" !== typeof a.video && (c.offerToReceiveVideo = a.video));
            return c
        };
        g.prototype.createOffer = function (a, b, d) {
            var c = this;
            this.pc.createOffer(function (a) {
                c.pc && c.pc.setLocalDescription(new RTCSessionDescription(a), b, d)
            }, d, this.createModernConstraints(a))
        };
        g.prototype.createAnswer =
            function (a, b, d) {
                var c = this;
                this.pc.createAnswer(function (a) {
                    c.pc && c.pc.setLocalDescription(new RTCSessionDescription(a), b, d)
                }, d, this.createModernConstraints(a))
            };
        g.prototype.processSDP = function (a, b, d, e) {
            var c = this;
            this.pc.setRemoteDescription(new RTCSessionDescription({sdp: a, type: "offer"}), function () {
                c.createAnswer(b, d, e)
            }, e)
        };
        g.prototype.getSDP = function () {
            return this.pc.localDescription.sdp
        };
        g.prototype.processAnswer = function (a, b, d) {
            this.pc && this.pc.setRemoteDescription(new RTCSessionDescription({
                sdp: a,
                type: "answer"
            }), b, d)
        };
        g.test = function () {
            if ("object" == typeof navigator) {
                if (navigator.webkitGetUserMedia && "function" == typeof window.webkitRTCPeerConnection)return !0;
                if (navigator.mozGetUserMedia && "function" == typeof window.mozRTCPeerConnection) {
                    try {
                        if ("function" !== typeof(new window.mozRTCPeerConnection).getLocalStreams)return !1
                    } catch (c) {
                        return !1
                    }
                    return !0
                }
                if ("undefined" !== typeof RTCIceGatherer)return !0
            }
        };
        g = g.test() ? new g : null;
        a.protocol = g;
        a.enabled = !!a.protocol;
        m.exports = a
    }, {
        "../log": 7, "../statemachine": 19,
        "../util": 20, "ortc-adapter": 27, "stacktrace-js": 40
    }],
    16: [function (g, m, k) {
        function a() {
        }

        function b(b) {
            var d = null, e = new a;
            Array.from(b.values()).forEach(function (a) {
                switch (a.type.replace("-", "")) {
                    case "candidatepair":
                        e.timestamp = a.timestamp;
                        break;
                    case "inboundrtp":
                        e.jitter = 1E3 * a.jitter;
                        e.packetsLost = a.packetsLost;
                        e.packetsReceived = a.packetsReceived;
                        e.bytesReceived = a.bytesReceived;
                        if (a = b.get(a.trackId)) e.audioOutputLevel = 32767 * a.audioLevel;
                        break;
                    case "outboundrtp":
                        e.packetsSent = a.packetsSent;
                        e.bytesSent =
                            a.bytesSent;
                        if (a.codecId) {
                            var c = b.get(a.codecId).mimeType;
                            e.codecName = c && c.match(/(.*\/)?(.*)/)[2]
                        }
                        if (a = b.get(a.trackId)) e.audioInputLevel = 32767 * a.audioLevel;
                        break;
                    case "transport":
                        "connected" === a.dtlsState && (d = a.id)
                }
            });
            var c = b.get(d);
            if (!c)return e;
            c = b.get(c.selectedCandidatePairId);
            if (!c)return e;
            var f = b.get(c.localCandidateId), g = b.get(c.remoteCandidateId);
            Object.assign(e, {
                localAddress: f && f.ip,
                remoteAddress: g && g.ip,
                rtt: c && 1E3 * c.currentRoundTripTime
            });
            return e
        }

        var f = g("./mockrtcstatsreport"), d = !1;
        "undefined" !== typeof window && window.navigator && (d = window.navigator.userAgent.match("CriOS") || window.chrome && "Google Inc." === window.navigator.vendor && -1 === window.navigator.userAgent.indexOf("OPR") && -1 === window.navigator.userAgent.indexOf("Edge"));
        m.exports = function (a, l) {
            l = Object.assign({createRTCSample: b}, l);
            if (!a)return Promise.reject(Error("PeerConnection is null"));
            if ("function" !== typeof a.getStats)return Promise.reject(Error("WebRTC statistics are unsupported"));
            if (d)return (new Promise(function (b,
                                                d) {
                return a.getStats(b, d)
            })).then(f.fromRTCStatsResponse).then(l.createRTCSample);
            var e;
            try {
                e = a.getStats()
            } catch (c) {
                e = (new Promise(function (b, c) {
                    return a.getStats(b, c)
                })).then(f.fromRTCStatsResponse)
            }
            return e.then(l.createRTCSample)
        }
    }, {"./mockrtcstatsreport": 12}],
    17: [function (g, m, k) {
        function a(b) {
            if (!(this instanceof a))return new a(b);
            this.id = a.nextId++;
            this.maxDuration = b.maxDuration;
            a.items[this.id] = this;
            this.create(!!b.loop);
            return this
        }

        g = {
            create: function (a) {
                this.audio = document.createElement("audio");
                this.audio.loop = a;
                this.playing = !1;
                var b = this;
                this.audio.addEventListener("ended", function () {
                    b.playing = !1
                })
            }, buffer: function () {
            }, play: function () {
                if (!this.playing) {
                    var a = this.audio;
                    this.rewind();
                    var b = this, e = this.maxDuration;
                    e && e < 1E3 * a.duration && setTimeout(function () {
                        a.pause();
                        b.playing = !1
                    }, e);
                    this.playing = !0;
                    a.play()
                }
            }, load: function (a) {
                this.audio.src = a
            }, stop: function () {
                this.playing = !1;
                this.audio.pause();
                this.rewind()
            }, destroy: function () {
                this.audio.src = "";
                delete this.audio
            }, rewind: function () {
                this.audio.currentTime =
                    0;
                this.audio.currentTime && this.audio.load()
            }
        };
        m = {
            create: function () {
            }, buffer: function (a) {
            }, play: function () {
            }, load: function (a) {
            }, stop: function () {
            }, destroy: function () {
            }
        };
        if ("undefined" === typeof window)for (var b in m)a.prototype[b] = m[b]; else a.prototype = g;
        a.nextId = 0;
        a.debug = !1;
        a.tasks = [];
        a.items = {};
        k.Sound = a
    }, {}],
    18: [function (g, m, k) {
        function a(a, b) {
            return function () {
                var d = Array.prototype.slice(arguments);
                b.apply(a, d)
            }
        }

        function b() {
            if (!(this instanceof b))return new b;
            this.cache = {}
        }

        b.prototype.add = function (a,
                                    b, e) {
            e = e || {};
            if (!(e instanceof Object))throw new TypeError("Bad envelope type; expected Object");
            b instanceof Array || (b = [b]);
            this.cache[a] = {starttime: null, sounds: b, envelope: e}
        };
        b.prototype.play = function (a, b, e) {
            b = b || 0;
            e = e || 1;
            if (a in this.cache) {
                a = this.cache[a];
                for (var d = 0; d < a.sounds.length; d++)a.sounds[d].play(b, e);
                a.starttime = (new Date).getTime()
            }
        };
        b.prototype.stop = function (a) {
            if (a in this.cache) {
                var b = this.cache[a];
                a = b.envelope.release || 0;
                var e = function () {
                        for (var a = 0; a < b.sounds.length; a++)b.sounds[a].stop()
                    },
                    f = (new Date).getTime(), f = Math.max(0, a - (f - b.starttime));
                0 == a ? e() : setTimeout(e, f)
            }
        };
        b.prototype.envelope = function (a, b) {
            if (a in this.cache) {
                var d = this.cache[a], f;
                for (f in b)d.envelope[f] = b[f]
            }
        };
        b.prototype.playseq = function () {
            var b = null, d = [], e = function () {
                var f = d.shift();
                if (f) {
                    var r = f[0], c = f[1] || 0, f = f[2] || 0;
                    r in this.cache && this.play(r);
                    b = setTimeout(a(this, e), c + f)
                } else b = null
            };
            return function (f) {
                for (var l = 0; l < f.length; l++)d.push(f[l]);
                null == b && (b = setTimeout(a(this, e), 0))
            }
        }();
        k.SoundCache = b
    }, {}],
    19: [function (g,
                   m, k) {
        function a(b, e) {
            if (!(this instanceof a))return new a(b, e);
            var d = e;
            Object.defineProperties(this, {
                _currentState: {
                    get: function () {
                        return d
                    }, set: function (a) {
                        d = a
                    }
                }, currentState: {
                    enumerable: !0, get: function () {
                        return d
                    }
                }, states: {enumerable: !0, value: b}, transitions: {enumerable: !0, value: []}
            });
            Object.freeze(this)
        }

        function b(a, b) {
            Object.defineProperties(this, {from: {enumerable: !0, value: a}, to: {enumerable: !0, value: b}})
        }

        function f(a, e) {
            if (!(this instanceof f))return new f(a, e);
            Error.call(this);
            b.call(this, a, e);
            Object.defineProperties(this, {
                message: {
                    enumerable: !0,
                    value: "Invalid transition from " + ("string" === typeof a ? '"' + a + '"' : "null") + ' to "' + e + '"'
                }
            });
            Object.freeze(this)
        }

        g = g("util").inherits;
        a.prototype.transition = function (a) {
            var d = this.currentState, l = this.states[d], d = l && -1 !== l.indexOf(a) ? new b(d, a) : new f(d, a);
            this.transitions.push(d);
            this._currentState = a;
            if (d instanceof f)throw d;
            return this
        };
        g(f, Error);
        m.exports = a
    }, {util: 43}],
    20: [function (g, m, k) {
        (function (a) {
            function b(a) {
                if (!(this instanceof b))return new b(a);
                this.message = a
            }

            function f(a) {
                return function () {
                    var b = Array.prototype.slice.call(arguments, 0);
                    a.memo = a.memo || {};
                    return a.memo[b] ? a.memo[b] : a.memo[b] = a.apply(null, b)
                }
            }

            function d(a) {
                a = a.split(".");
                if (3 != a.length)throw new b("Wrong number of segments");
                return v(a[1])
            }

            function e(a) {
                if ("" == a)return {};
                if (-1 == a.indexOf("&") && -1 == a.indexOf("="))return a;
                a = a.split("&");
                for (var b = {}, c = 0; c < a.length; c++) {
                    var h = a[c].split("=");
                    b[decodeURIComponent(h[0])] = e(decodeURIComponent(h[1]))
                }
                return b
            }

            function l(b) {
                try {
                    return btoa(b)
                } catch (q) {
                    return (new a(b)).toString("base64")
                }
            }

            function r(b) {
                try {
                    return atob(b)
                } catch (q) {
                    try {
                        return (new a(b, "base64")).toString("ascii")
                    } catch (B) {
                        return base64.decode(b)
                    }
                }
            }

            function c(a) {
                var b = [], d;
                for (d in a) {
                    var h = "object" == typeof a[d] ? c(a[d]) : a[d];
                    b.push(encodeURIComponent(d) + "=" + encodeURIComponent(h))
                }
                return b.join("&")
            }

            function p(a, b) {
                return a === b ? !0 : typeof a !== typeof b ? !1 : a instanceof Date && b instanceof Date ? a.getTime() === b.getTime() : "object" !== typeof a && "object" !== typeof b ? a == b : u(a, b)
            }

            function u(a, b) {
                if (void 0 === a || null === a || void 0 === b ||
                    null === b || a.prototype !== b.prototype)return !1;
                try {
                    var c = y(a), h = y(b)
                } catch (z) {
                    return !1
                }
                if (c.length !== h.length)return !1;
                c.sort();
                h.sort();
                for (h = c.length - 1; 0 <= h; h--) {
                    var d = c[h];
                    if (!p(a[d], b[d]))return !1
                }
                return !0
            }

            var n = g("events").EventEmitter;
            b.prototype.toString = function () {
                return "Twilio.Exception: " + this.message
            };
            var v = f(function (a) {
                var b = a.length % 4;
                0 < b && (a += Array(4 - b + 1).join("="));
                a = a.replace(/-/g, "+").replace(/_/g, "/");
                a = r(a);
                return JSON.parse(a)
            }), t = f(function (a) {
                a = d(a);
                for (var c = 0 === a.scope.length ?
                    [] : a.scope.split(" "), f = {}, h = 0; h < c.length; h++) {
                    var w;
                    w = c[h].match(/^scope:(\w+):(\w+)\??(.*)$/);
                    if (!w || 4 != w.length)throw new b("Bad scope URI");
                    w = {service: w[1], privilege: w[2], params: e(w[3])};
                    f[w.service + ":" + w.privilege] = w
                }
                a.scope = f;
                return a
            }), m = function () {
                function a() {
                    this.set = {}
                }

                a.prototype.clear = function () {
                    this.set = {}
                };
                a.prototype.put = function (b) {
                    return this.set[b] = a.DUMMY
                };
                a.prototype.del = function (a) {
                    return delete this.set[a]
                };
                a.prototype.map = function (a, b) {
                    var h = [], c;
                    for (c in this.set)h.push(a.call(b,
                        c));
                    return h
                };
                a.DUMMY = {};
                return a
            }(), A = "", y = "function" === typeof Object.keys ? Object.keys : function (a) {
                    var b = [], c;
                    for (c in a)b.push(c);
                    return b
                };
            k.getPStreamVersion = function () {
                return "1.3"
            };
            k.getReleaseVersion = function () {
                return "1.3.19"
            };
            k.getSoundVersion = function () {
                return "1.0.0"
            };
            k.encodescope = function (a, b, d) {
                a = ["scope", a, b].join(":");
                b = !0;
                for (var h in d) {
                    b = !1;
                    break
                }
                return b ? a : a + "?" + c(d)
            };
            k.dummyToken = function (a) {
                var b = {iss: "AC1111111111111111111111111111111", exp: 14E8}, c;
                for (c in b)a[c] = a[c] || b[c];
                a =
                    l(JSON.stringify(a));
                a = a.replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
                return ["*", a, "*"].join(".")
            };
            k.Exception = b;
            k.decode = d;
            k.btoa = l;
            k.atob = r;
            k.objectize = t;
            k.urlencode = function (a, b) {
                var c = [];
                b = b || !1;
                for (var h in a)if (b && a[h] instanceof Array)for (var d in a[h]) {
                    var e = a[h][d];
                    c.push(encodeURIComponent(h) + "=" + encodeURIComponent(e))
                } else e = a[h], c.push(encodeURIComponent(h) + "=" + encodeURIComponent(e));
                return c.join("&")
            };
            k.Set = m;
            k.bind = function (a, b) {
                var c = Array.prototype.slice.call(arguments, 2);
                return function () {
                    var h = Array.prototype.slice.call(arguments);
                    return a.apply(b, c.concat(h))
                }
            };
            k.getSystemInfo = function () {
                g("./rtc");
                var a = "undefined" != typeof navigator ? navigator : {};
                return {
                    p: "browser",
                    v: "1.3",
                    h: "d4c065e",
                    browser: {userAgent: a.userAgent || "unknown", platform: a.platform || "unknown"},
                    plugin: "rtc"
                }
            };
            k.splitObjects = function (a, b) {
                var c;
                c = "string" != typeof a ? "" : a.trim ? a.trim() : a.replace(/^\s+|\s+$/g, "");
                return 0 == c.length ? [] : c.split("\n")
            };
            k.generateConnectionUUID = function () {
                return "TJSxxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,
                    function (a) {
                        var b = 16 * Math.random() | 0;
                        return ("x" == a ? b : b & 3 | 8).toString(16)
                    })
            };
            k.getTwilioRoot = function () {
                return A
            };
            k.setTwilioRoot = function (a) {
                A = a
            };
            k.monitorEventEmitter = function (a, b) {
                function c(h) {
                    var d = n.listenerCount(b, h);
                    h = "The number of " + h + " listeners on " + a + " exceeds the recommended number of 10. While twilio.js will continue to function normally, this may be indicative of an application error. Note that " + h + " listeners exist for the lifetime of the " + a + ".";
                    10 <= d && ("undefined" !== typeof console &&
                    (console.warn ? console.warn(h) : console.log && console.log(h)), b.removeListener("newListener", c))
                }

                b.setMaxListeners(0);
                b.on("newListener", c)
            };
            k.deepEqual = p
        }).call(this, g("buffer").Buffer)
    }, {"./rtc": 11, buffer: 23, events: 24}],
    21: [function (g, m, k) {
        function a(b) {
            var d = this instanceof a ? this : new a(b);
            d.sock = null;
            var e = function () {
            };
            d.onopen = e;
            d.onclose = e;
            d.onmessage = e;
            d.onerror = e;
            e = {
                logPrefix: "[WSTransport]",
                chunderw: "chunderw-vpc-gll.twilio.com",
                reconnect: !0,
                debug: !1,
                secureSignaling: !0
            };
            b = b || {};
            for (var c in e)c in
            b || (b[c] = e[c]);
            d.options = b;
            f.mixinLog(d, d.options.logPrefix);
            d.log.enabled = d.options.debug;
            d.defaultReconnect = d.options.reconnect;
            d.uri = (d.options.secureSignaling ? "wss://" : "ws://") + d.options.host + "/signal";
            return d
        }

        var b = g("./heartbeat").Heartbeat, f = g("./log"), d = g("ws");
        a.prototype.msgQueue = [];
        a.prototype.open = function (a) {
            this.log("Opening socket");
            this.sock && 2 > this.sock.readyState ? this.log("Socket already open.") : (this.options.reconnect = this.defaultReconnect, this.heartbeat && (this.heartbeat.onsleep =
                    function () {
                    }), this.heartbeat = new b({interval: 15}), this.sock = this._connect(a))
        };
        a.prototype.send = function (a) {
            if (this.sock)if (0 == this.sock.readyState) this.msgQueue.push(a); else try {
                this.sock.send(a)
            } catch (l) {
                this.log("Error while sending. Closing socket: " + l.message), this.sock.close()
            }
        };
        a.prototype.close = function () {
            this.log("Closing socket");
            this.options.reconnect = !1;
            this.sock && (this.sock.close(), this.sock = null);
            this.heartbeat.onsleep = function () {
            }
        };
        a.prototype._cleanupSocket = function (a) {
            if (a) {
                this.log("Cleaning up socket");
                var b = function () {
                };
                a.onopen = function () {
                    a.close()
                };
                a.onmessage = b;
                a.onerror = b;
                a.onclose = b;
                2 > a.readyState && a.close()
            }
        };
        a.prototype._connect = function (a) {
            var b = ++a || 1;
            this.log("attempting to connect");
            var e = null;
            try {
                e = new d(this.uri)
            } catch (v) {
                this.onerror({code: 31E3, message: v.message || "Could not connect to " + this.uri});
                this.close();
                return
            }
            var c = this, f = this.sock, g = null, n = setTimeout(function () {
                c.log("connection attempt timed out");
                e.onclose = function () {
                };
                e.close();
                c.onclose();
                c._tryReconnect(b)
            }, 5E3);
            e.onopen =
                function () {
                    clearTimeout(n);
                    c._cleanupSocket(f);
                    g = (new Date).getTime();
                    c.log("Socket opened");
                    c.heartbeat.onsleep = function () {
                        c.log("Heartbeat timed out. closing socket");
                        c.sock.onclose = function () {
                        };
                        c.sock.close();
                        c.onclose();
                        c._tryReconnect(b)
                    };
                    c.heartbeat.beat();
                    c.onopen();
                    for (var a = 0; a < c.msgQueue.length; a++)c.sock.send(c.msgQueue[a]);
                    c.msgQueue = []
                };
            e.onclose = function () {
                clearTimeout(n);
                c._cleanupSocket(f);
                c.heartbeat.onsleep = function () {
                };
                g && 10 < ((new Date).getTime() - g) / 1E3 && (b = 1);
                c.log("Socket closed");
                c.onclose();
                c._tryReconnect(b)
            };
            e.onerror = function (a) {
                c.log("Socket received error: " + a.message);
                c.onerror({code: 31E3, message: a.message || "WSTransport socket error"})
            };
            e.onmessage = function (a) {
                c.heartbeat.beat();
                if ("\n" == a.data) c.send("\n"); else c.onmessage(a)
            };
            return e
        };
        a.prototype._tryReconnect = function (a) {
            a = a || 0;
            if (this.options.reconnect) {
                this.log("Attempting to reconnect.");
                var b = this, d = 0, d = 5 > a ? 30 + Math.round(50 * Math.random() * Math.pow(2, a)) : 3E3;
                setTimeout(function () {
                    b.open(a)
                }, d)
            }
        };
        k.WSTransport =
            a
    }, {"./heartbeat": 6, "./log": 7, ws: 44}],
    22: [function (g, m, k) {
        (function (a) {
            function b(a) {
                a = a.charCodeAt(0);
                if (43 === a)return 62;
                if (47 === a)return 63;
                if (48 > a)return -1;
                if (58 > a)return a - 48 + 52;
                if (91 > a)return a - 65;
                if (123 > a)return a - 97 + 26
            }

            var f = "undefined" !== typeof Uint8Array ? Uint8Array : Array;
            a.toByteArray = function (a) {
                function d(a) {
                    k[n++] = a
                }

                var l, g, c, p, k;
                if (0 < a.length % 4)throw Error("Invalid string. Length must be a multiple of 4");
                l = a.length;
                p = "=" === a.charAt(l - 2) ? 2 : "=" === a.charAt(l - 1) ? 1 : 0;
                k = new f(3 * a.length /
                    4 - p);
                g = 0 < p ? a.length - 4 : a.length;
                var n = 0;
                for (l = 0; l < g; l += 4)c = b(a.charAt(l)) << 18 | b(a.charAt(l + 1)) << 12 | b(a.charAt(l + 2)) << 6 | b(a.charAt(l + 3)), d((c & 16711680) >> 16), d((c & 65280) >> 8), d(c & 255);
                2 === p ? (c = b(a.charAt(l)) << 2 | b(a.charAt(l + 1)) >> 4, d(c & 255)) : 1 === p && (c = b(a.charAt(l)) << 10 | b(a.charAt(l + 1)) << 4 | b(a.charAt(l + 2)) >> 2, d(c >> 8 & 255), d(c & 255));
                return k
            };
            a.fromByteArray = function (a) {
                var b, d = a.length % 3, f = "", c, g;
                b = 0;
                for (g = a.length - d; b < g; b += 3)c = (a[b] << 16) + (a[b + 1] << 8) + a[b + 2], c = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(c >>
                        18 & 63) + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(c >> 12 & 63) + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(c >> 6 & 63) + "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(c & 63), f += c;
                switch (d) {
                    case 1:
                        c = a[a.length - 1];
                        f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(c >> 2);
                        f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(c << 4 & 63);
                        f += "==";
                        break;
                    case 2:
                        c = (a[a.length - 2] << 8) +
                            a[a.length - 1], f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(c >> 10), f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(c >> 4 & 63), f += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(c << 2 & 63), f += "="
                }
                return f
            }
        })("undefined" === typeof k ? this.base64js = {} : k)
    }, {}],
    23: [function (g, m, k) {
        function a(b, c, d) {
            if (!(this instanceof a))return new a(b, c, d);
            var h = typeof b, e;
            if ("number" === h) e = 0 < b ? b >>> 0 : 0; else if ("string" === h) {
                if ("base64" ===
                    c)for (b = (b.trim ? b.trim() : b.replace(/^\s+|\s+$/g, "")).replace(B, ""); 0 !== b.length % 4;)b += "=";
                e = a.byteLength(b, c)
            } else if ("object" === h && null !== b) "Buffer" === b.type && y(b.data) && (b = b.data), e = 0 < +b.length ? Math.floor(+b.length) : 0; else throw new TypeError("must start with number, buffer, array or string");
            if (this.length > x)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + x.toString(16) + " bytes");
            var f;
            a.TYPED_ARRAY_SUPPORT ? f = a._augment(new Uint8Array(e)) : (f = this, f.length = e, f._isBuffer = !0);
            if (a.TYPED_ARRAY_SUPPORT && "number" === typeof b.byteLength) f._set(b); else {
                var w = b;
                if (y(w) || a.isBuffer(w) || w && "object" === typeof w && "number" === typeof w.length)if (a.isBuffer(b))for (c = 0; c < e; c++)f[c] = b.readUInt8(c); else for (c = 0; c < e; c++)f[c] = (b[c] % 256 + 256) % 256; else if ("string" === h) f.write(b, 0, c); else if ("number" === h && !a.TYPED_ARRAY_SUPPORT && !d)for (c = 0; c < e; c++)f[c] = 0
            }
            return f
        }

        function b(a, b, c) {
            var h = "";
            for (c = Math.min(a.length, c); b < c; b++)h += String.fromCharCode(a[b]);
            return h
        }

        function f(a, b, c) {
            if (0 !== a %
                1 || 0 > a)throw new RangeError("offset is not uint");
            if (a + b > c)throw new RangeError("Trying to access beyond buffer length");
        }

        function d(b, c, d, e, f, n) {
            if (!a.isBuffer(b))throw new TypeError("buffer must be a Buffer instance");
            if (c > f || c < n)throw new TypeError("value is out of bounds");
            if (d + e > b.length)throw new TypeError("index out of range");
        }

        function e(a, b, c, d) {
            0 > b && (b = 65535 + b + 1);
            for (var h = 0, e = Math.min(a.length - c, 2); h < e; h++)a[c + h] = (b & 255 << 8 * (d ? h : 1 - h)) >>> 8 * (d ? h : 1 - h)
        }

        function l(a, b, c, d) {
            0 > b && (b = 4294967295 +
                b + 1);
            for (var h = 0, e = Math.min(a.length - c, 4); h < e; h++)a[c + h] = b >>> 8 * (d ? h : 3 - h) & 255
        }

        function r(a, b, c, d, e, f) {
            if (b > e || b < f)throw new TypeError("value is out of bounds");
            if (c + d > a.length)throw new TypeError("index out of range");
        }

        function c(a, b, c, d, e) {
            e || r(a, b, c, 4, 3.4028234663852886E38, -3.4028234663852886E38);
            A.write(a, b, c, d, 23, 4);
            return c + 4
        }

        function p(a, b, c, d, e) {
            e || r(a, b, c, 8, 1.7976931348623157E308, -1.7976931348623157E308);
            A.write(a, b, c, d, 52, 8);
            return c + 8
        }

        function u(a) {
            for (var b = [], c = 0; c < a.length; c++) {
                var h =
                    a.charCodeAt(c);
                if (127 >= h) b.push(h); else {
                    var d = c;
                    55296 <= h && 57343 >= h && c++;
                    h = encodeURIComponent(a.slice(d, c + 1)).substr(1).split("%");
                    for (d = 0; d < h.length; d++)b.push(parseInt(h[d], 16))
                }
            }
            return b
        }

        function n(a) {
            for (var b = [], c = 0; c < a.length; c++)b.push(a.charCodeAt(c) & 255);
            return b
        }

        function v(a, b, c, d, e) {
            e && (d -= d % e);
            for (e = 0; e < d && !(e + c >= b.length || e >= a.length); e++)b[e + c] = a[e];
            return e
        }

        function t(a) {
            try {
                return decodeURIComponent(a)
            } catch (w) {
                return String.fromCharCode(65533)
            }
        }

        var C = g("base64-js"), A = g("ieee754"),
            y = g("is-array");
        k.Buffer = a;
        k.SlowBuffer = a;
        k.INSPECT_MAX_BYTES = 50;
        a.poolSize = 8192;
        var x = 1073741823;
        a.TYPED_ARRAY_SUPPORT = function () {
            try {
                var a = new ArrayBuffer(0), b = new Uint8Array(a);
                b.foo = function () {
                    return 42
                };
                return 42 === b.foo() && "function" === typeof b.subarray && 0 === (new Uint8Array(1)).subarray(1, 1).byteLength
            } catch (z) {
                return !1
            }
        }();
        a.isBuffer = function (a) {
            return !(null == a || !a._isBuffer)
        };
        a.compare = function (b, c) {
            if (!a.isBuffer(b) || !a.isBuffer(c))throw new TypeError("Arguments must be Buffers");
            for (var h =
                b.length, d = c.length, e = 0, f = Math.min(h, d); e < f && b[e] === c[e]; e++);
            e !== f && (h = b[e], d = c[e]);
            return h < d ? -1 : d < h ? 1 : 0
        };
        a.isEncoding = function (a) {
            switch (String(a).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "binary":
                case "base64":
                case "raw":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return !0;
                default:
                    return !1
            }
        };
        a.concat = function (b, c) {
            if (!y(b))throw new TypeError("Usage: Buffer.concat(list[, length])");
            if (0 === b.length)return new a(0);
            if (1 === b.length)return b[0];
            var h;
            if (void 0 ===
                c)for (h = c = 0; h < b.length; h++)c += b[h].length;
            var d = new a(c), e = 0;
            for (h = 0; h < b.length; h++) {
                var f = b[h];
                f.copy(d, e);
                e += f.length
            }
            return d
        };
        a.byteLength = function (a, b) {
            var c;
            a += "";
            switch (b || "utf8") {
                case "ascii":
                case "binary":
                case "raw":
                    c = a.length;
                    break;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    c = 2 * a.length;
                    break;
                case "hex":
                    c = a.length >>> 1;
                    break;
                case "utf8":
                case "utf-8":
                    c = u(a).length;
                    break;
                case "base64":
                    c = C.toByteArray(a).length;
                    break;
                default:
                    c = a.length
            }
            return c
        };
        a.prototype.length = void 0;
        a.prototype.parent = void 0;
        a.prototype.toString = function (a, c, d) {
            var h = !1;
            c >>>= 0;
            d = void 0 === d || Infinity === d ? this.length : d >>> 0;
            a || (a = "utf8");
            0 > c && (c = 0);
            d > this.length && (d = this.length);
            if (d <= c)return "";
            for (; ;)switch (a) {
                case "hex":
                    a = c;
                    c = d;
                    d = this.length;
                    if (!a || 0 > a) a = 0;
                    if (!c || 0 > c || c > d) c = d;
                    h = "";
                    for (d = a; d < c; d++)a = h, h = this[d], h = 16 > h ? "0" + h.toString(16) : h.toString(16), h = a + h;
                    return h;
                case "utf8":
                case "utf-8":
                    h = a = "";
                    for (d = Math.min(this.length, d); c < d; c++)127 >= this[c] ? (a += t(h) + String.fromCharCode(this[c]), h = "") : h += "%" + this[c].toString(16);
                    return a + t(h);
                case "ascii":
                    return b(this, c, d);
                case "binary":
                    return b(this, c, d);
                case "base64":
                    return c = 0 === c && d === this.length ? C.fromByteArray(this) : C.fromByteArray(this.slice(c, d)), c;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    c = this.slice(c, d);
                    d = "";
                    for (a = 0; a < c.length; a += 2)d += String.fromCharCode(c[a] + 256 * c[a + 1]);
                    return d;
                default:
                    if (h)throw new TypeError("Unknown encoding: " + a);
                    a = (a + "").toLowerCase();
                    h = !0
            }
        };
        a.prototype.equals = function (b) {
            if (!a.isBuffer(b))throw new TypeError("Argument must be a Buffer");
            return 0 === a.compare(this, b)
        };
        a.prototype.inspect = function () {
            var a = "", b = k.INSPECT_MAX_BYTES;
            0 < this.length && (a = this.toString("hex", 0, b).match(/.{2}/g).join(" "), this.length > b && (a += " ... "));
            return "<Buffer " + a + ">"
        };
        a.prototype.compare = function (b) {
            if (!a.isBuffer(b))throw new TypeError("Argument must be a Buffer");
            return a.compare(this, b)
        };
        a.prototype.get = function (a) {
            console.log(".get() is deprecated. Access using array indexes instead.");
            return this.readUInt8(a)
        };
        a.prototype.set = function (a, b) {
            console.log(".set() is deprecated. Access using array indexes instead.");
            return this.writeUInt8(a, b)
        };
        a.prototype.write = function (a, b, c, d) {
            if (isFinite(b)) isFinite(c) || (d = c, c = void 0); else {
                var h = d;
                d = b;
                b = c;
                c = h
            }
            b = Number(b) || 0;
            h = this.length - b;
            c ? (c = Number(c), c > h && (c = h)) : c = h;
            d = String(d || "utf8").toLowerCase();
            switch (d) {
                case "hex":
                    b = Number(b) || 0;
                    d = this.length - b;
                    c ? (c = Number(c), c > d && (c = d)) : c = d;
                    d = a.length;
                    if (0 !== d % 2)throw Error("Invalid hex string");
                    c > d / 2 && (c = d / 2);
                    for (d = 0; d < c; d++) {
                        h = parseInt(a.substr(2 * d, 2), 16);
                        if (isNaN(h))throw Error("Invalid hex string");
                        this[b + d] = h
                    }
                    a = d;
                    break;
                case "utf8":
                case "utf-8":
                    a =
                        v(u(a), this, b, c);
                    break;
                case "ascii":
                    a = v(n(a), this, b, c);
                    break;
                case "binary":
                    a = v(n(a), this, b, c);
                    break;
                case "base64":
                    a = v(C.toByteArray(a), this, b, c);
                    break;
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    for (var e, h = [], f = 0; f < a.length; f++)e = a.charCodeAt(f), d = e >> 8, e %= 256, h.push(e), h.push(d);
                    a = v(h, this, b, c, 2);
                    break;
                default:
                    throw new TypeError("Unknown encoding: " + d);
            }
            return a
        };
        a.prototype.toJSON = function () {
            return {type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0)}
        };
        a.prototype.slice =
            function (b, c) {
                var d = this.length;
                b = ~~b;
                c = void 0 === c ? d : ~~c;
                0 > b ? (b += d, 0 > b && (b = 0)) : b > d && (b = d);
                0 > c ? (c += d, 0 > c && (c = 0)) : c > d && (c = d);
                c < b && (c = b);
                if (a.TYPED_ARRAY_SUPPORT)return a._augment(this.subarray(b, c));
                for (var d = c - b, h = new a(d, void 0, !0), e = 0; e < d; e++)h[e] = this[e + b];
                return h
            };
        a.prototype.readUInt8 = function (a, b) {
            b || f(a, 1, this.length);
            return this[a]
        };
        a.prototype.readUInt16LE = function (a, b) {
            b || f(a, 2, this.length);
            return this[a] | this[a + 1] << 8
        };
        a.prototype.readUInt16BE = function (a, b) {
            b || f(a, 2, this.length);
            return this[a] <<
                8 | this[a + 1]
        };
        a.prototype.readUInt32LE = function (a, b) {
            b || f(a, 4, this.length);
            return (this[a] | this[a + 1] << 8 | this[a + 2] << 16) + 16777216 * this[a + 3]
        };
        a.prototype.readUInt32BE = function (a, b) {
            b || f(a, 4, this.length);
            return 16777216 * this[a] + (this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3])
        };
        a.prototype.readInt8 = function (a, b) {
            b || f(a, 1, this.length);
            return this[a] & 128 ? -1 * (255 - this[a] + 1) : this[a]
        };
        a.prototype.readInt16LE = function (a, b) {
            b || f(a, 2, this.length);
            var c = this[a] | this[a + 1] << 8;
            return c & 32768 ? c | 4294901760 : c
        };
        a.prototype.readInt16BE =
            function (a, b) {
                b || f(a, 2, this.length);
                var c = this[a + 1] | this[a] << 8;
                return c & 32768 ? c | 4294901760 : c
            };
        a.prototype.readInt32LE = function (a, b) {
            b || f(a, 4, this.length);
            return this[a] | this[a + 1] << 8 | this[a + 2] << 16 | this[a + 3] << 24
        };
        a.prototype.readInt32BE = function (a, b) {
            b || f(a, 4, this.length);
            return this[a] << 24 | this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3]
        };
        a.prototype.readFloatLE = function (a, b) {
            b || f(a, 4, this.length);
            return A.read(this, a, !0, 23, 4)
        };
        a.prototype.readFloatBE = function (a, b) {
            b || f(a, 4, this.length);
            return A.read(this, a, !1,
                23, 4)
        };
        a.prototype.readDoubleLE = function (a, b) {
            b || f(a, 8, this.length);
            return A.read(this, a, !0, 52, 8)
        };
        a.prototype.readDoubleBE = function (a, b) {
            b || f(a, 8, this.length);
            return A.read(this, a, !1, 52, 8)
        };
        a.prototype.writeUInt8 = function (b, c, e) {
            b = +b;
            c >>>= 0;
            e || d(this, b, c, 1, 255, 0);
            a.TYPED_ARRAY_SUPPORT || (b = Math.floor(b));
            this[c] = b;
            return c + 1
        };
        a.prototype.writeUInt16LE = function (b, c, f) {
            b = +b;
            c >>>= 0;
            f || d(this, b, c, 2, 65535, 0);
            a.TYPED_ARRAY_SUPPORT ? (this[c] = b, this[c + 1] = b >>> 8) : e(this, b, c, !0);
            return c + 2
        };
        a.prototype.writeUInt16BE =
            function (b, c, f) {
                b = +b;
                c >>>= 0;
                f || d(this, b, c, 2, 65535, 0);
                a.TYPED_ARRAY_SUPPORT ? (this[c] = b >>> 8, this[c + 1] = b) : e(this, b, c, !1);
                return c + 2
            };
        a.prototype.writeUInt32LE = function (b, c, e) {
            b = +b;
            c >>>= 0;
            e || d(this, b, c, 4, 4294967295, 0);
            a.TYPED_ARRAY_SUPPORT ? (this[c + 3] = b >>> 24, this[c + 2] = b >>> 16, this[c + 1] = b >>> 8, this[c] = b) : l(this, b, c, !0);
            return c + 4
        };
        a.prototype.writeUInt32BE = function (b, c, e) {
            b = +b;
            c >>>= 0;
            e || d(this, b, c, 4, 4294967295, 0);
            a.TYPED_ARRAY_SUPPORT ? (this[c] = b >>> 24, this[c + 1] = b >>> 16, this[c + 2] = b >>> 8, this[c + 3] = b) : l(this, b,
                    c, !1);
            return c + 4
        };
        a.prototype.writeInt8 = function (b, c, e) {
            b = +b;
            c >>>= 0;
            e || d(this, b, c, 1, 127, -128);
            a.TYPED_ARRAY_SUPPORT || (b = Math.floor(b));
            0 > b && (b = 255 + b + 1);
            this[c] = b;
            return c + 1
        };
        a.prototype.writeInt16LE = function (b, c, f) {
            b = +b;
            c >>>= 0;
            f || d(this, b, c, 2, 32767, -32768);
            a.TYPED_ARRAY_SUPPORT ? (this[c] = b, this[c + 1] = b >>> 8) : e(this, b, c, !0);
            return c + 2
        };
        a.prototype.writeInt16BE = function (b, c, f) {
            b = +b;
            c >>>= 0;
            f || d(this, b, c, 2, 32767, -32768);
            a.TYPED_ARRAY_SUPPORT ? (this[c] = b >>> 8, this[c + 1] = b) : e(this, b, c, !1);
            return c + 2
        };
        a.prototype.writeInt32LE =
            function (b, c, e) {
                b = +b;
                c >>>= 0;
                e || d(this, b, c, 4, 2147483647, -2147483648);
                a.TYPED_ARRAY_SUPPORT ? (this[c] = b, this[c + 1] = b >>> 8, this[c + 2] = b >>> 16, this[c + 3] = b >>> 24) : l(this, b, c, !0);
                return c + 4
            };
        a.prototype.writeInt32BE = function (b, c, e) {
            b = +b;
            c >>>= 0;
            e || d(this, b, c, 4, 2147483647, -2147483648);
            0 > b && (b = 4294967295 + b + 1);
            a.TYPED_ARRAY_SUPPORT ? (this[c] = b >>> 24, this[c + 1] = b >>> 16, this[c + 2] = b >>> 8, this[c + 3] = b) : l(this, b, c, !1);
            return c + 4
        };
        a.prototype.writeFloatLE = function (a, b, d) {
            return c(this, a, b, !0, d)
        };
        a.prototype.writeFloatBE = function (a,
                                             b, d) {
            return c(this, a, b, !1, d)
        };
        a.prototype.writeDoubleLE = function (a, b, c) {
            return p(this, a, b, !0, c)
        };
        a.prototype.writeDoubleBE = function (a, b, c) {
            return p(this, a, b, !1, c)
        };
        a.prototype.copy = function (b, c, d, e) {
            d || (d = 0);
            e || 0 === e || (e = this.length);
            c || (c = 0);
            if (e !== d && 0 !== b.length && 0 !== this.length) {
                if (e < d)throw new TypeError("sourceEnd < sourceStart");
                if (0 > c || c >= b.length)throw new TypeError("targetStart out of bounds");
                if (0 > d || d >= this.length)throw new TypeError("sourceStart out of bounds");
                if (0 > e || e > this.length)throw new TypeError("sourceEnd out of bounds");
                e > this.length && (e = this.length);
                b.length - c < e - d && (e = b.length - c + d);
                e -= d;
                if (1E3 > e || !a.TYPED_ARRAY_SUPPORT)for (var f = 0; f < e; f++)b[f + c] = this[f + d]; else b._set(this.subarray(d, d + e), c)
            }
        };
        a.prototype.fill = function (a, b, c) {
            a || (a = 0);
            b || (b = 0);
            c || (c = this.length);
            if (c < b)throw new TypeError("end < start");
            if (c !== b && 0 !== this.length) {
                if (0 > b || b >= this.length)throw new TypeError("start out of bounds");
                if (0 > c || c > this.length)throw new TypeError("end out of bounds");
                if ("number" === typeof a)for (; b < c; b++)this[b] = a; else {
                    a = u(a.toString());
                    for (var d = a.length; b < c; b++)this[b] = a[b % d]
                }
                return this
            }
        };
        a.prototype.toArrayBuffer = function () {
            if ("undefined" !== typeof Uint8Array) {
                if (a.TYPED_ARRAY_SUPPORT)return (new a(this)).buffer;
                for (var b = new Uint8Array(this.length), c = 0, d = b.length; c < d; c += 1)b[c] = this[c];
                return b.buffer
            }
            throw new TypeError("Buffer.toArrayBuffer not supported in this browser");
        };
        var q = a.prototype;
        a._augment = function (b) {
            b.constructor = a;
            b._isBuffer = !0;
            b._get = b.get;
            b._set = b.set;
            b.get = q.get;
            b.set = q.set;
            b.write = q.write;
            b.toString = q.toString;
            b.toLocaleString = q.toString;
            b.toJSON = q.toJSON;
            b.equals = q.equals;
            b.compare = q.compare;
            b.copy = q.copy;
            b.slice = q.slice;
            b.readUInt8 = q.readUInt8;
            b.readUInt16LE = q.readUInt16LE;
            b.readUInt16BE = q.readUInt16BE;
            b.readUInt32LE = q.readUInt32LE;
            b.readUInt32BE = q.readUInt32BE;
            b.readInt8 = q.readInt8;
            b.readInt16LE = q.readInt16LE;
            b.readInt16BE = q.readInt16BE;
            b.readInt32LE = q.readInt32LE;
            b.readInt32BE = q.readInt32BE;
            b.readFloatLE = q.readFloatLE;
            b.readFloatBE = q.readFloatBE;
            b.readDoubleLE = q.readDoubleLE;
            b.readDoubleBE = q.readDoubleBE;
            b.writeUInt8 = q.writeUInt8;
            b.writeUInt16LE = q.writeUInt16LE;
            b.writeUInt16BE = q.writeUInt16BE;
            b.writeUInt32LE = q.writeUInt32LE;
            b.writeUInt32BE = q.writeUInt32BE;
            b.writeInt8 = q.writeInt8;
            b.writeInt16LE = q.writeInt16LE;
            b.writeInt16BE = q.writeInt16BE;
            b.writeInt32LE = q.writeInt32LE;
            b.writeInt32BE = q.writeInt32BE;
            b.writeFloatLE = q.writeFloatLE;
            b.writeFloatBE = q.writeFloatBE;
            b.writeDoubleLE = q.writeDoubleLE;
            b.writeDoubleBE = q.writeDoubleBE;
            b.fill = q.fill;
            b.inspect = q.inspect;
            b.toArrayBuffer = q.toArrayBuffer;
            return b
        };
        var B =
            /[^+\/0-9A-z]/g
    }, {"base64-js": 22, ieee754: 25, "is-array": 26}],
    24: [function (g, m, k) {
        function a() {
            this._events = this._events || {};
            this._maxListeners = this._maxListeners || void 0
        }

        function b(a) {
            return "function" === typeof a
        }

        function f(a) {
            return "object" === typeof a && null !== a
        }

        m.exports = a;
        a.EventEmitter = a;
        a.prototype._events = void 0;
        a.prototype._maxListeners = void 0;
        a.defaultMaxListeners = 10;
        a.prototype.setMaxListeners = function (a) {
            if ("number" !== typeof a || 0 > a || isNaN(a))throw TypeError("n must be a positive number");
            this._maxListeners =
                a;
            return this
        };
        a.prototype.emit = function (a) {
            var d, l, g, c;
            this._events || (this._events = {});
            if ("error" === a && (!this._events.error || f(this._events.error) && !this._events.error.length)) {
                d = arguments[1];
                if (d instanceof Error)throw d;
                throw TypeError('Uncaught, unspecified "error" event.');
            }
            l = this._events[a];
            if (void 0 === l)return !1;
            if (b(l))switch (arguments.length) {
                case 1:
                    l.call(this);
                    break;
                case 2:
                    l.call(this, arguments[1]);
                    break;
                case 3:
                    l.call(this, arguments[1], arguments[2]);
                    break;
                default:
                    d = arguments.length;
                    g = Array(d -
                        1);
                    for (c = 1; c < d; c++)g[c - 1] = arguments[c];
                    l.apply(this, g)
            } else if (f(l)) {
                d = arguments.length;
                g = Array(d - 1);
                for (c = 1; c < d; c++)g[c - 1] = arguments[c];
                l = l.slice();
                d = l.length;
                for (c = 0; c < d; c++)l[c].apply(this, g)
            }
            return !0
        };
        a.prototype.addListener = function (d, e) {
            var l;
            if (!b(e))throw TypeError("listener must be a function");
            this._events || (this._events = {});
            this._events.newListener && this.emit("newListener", d, b(e.listener) ? e.listener : e);
            this._events[d] ? f(this._events[d]) ? this._events[d].push(e) : this._events[d] = [this._events[d],
                        e] : this._events[d] = e;
            f(this._events[d]) && !this._events[d].warned && (l = void 0 !== this._maxListeners ? this._maxListeners : a.defaultMaxListeners) && 0 < l && this._events[d].length > l && (this._events[d].warned = !0, console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[d].length), "function" === typeof console.trace && console.trace());
            return this
        };
        a.prototype.on = a.prototype.addListener;
        a.prototype.once = function (a, e) {
            function d() {
                this.removeListener(a,
                    d);
                f || (f = !0, e.apply(this, arguments))
            }

            if (!b(e))throw TypeError("listener must be a function");
            var f = !1;
            d.listener = e;
            this.on(a, d);
            return this
        };
        a.prototype.removeListener = function (a, e) {
            var d, g, c;
            if (!b(e))throw TypeError("listener must be a function");
            if (!this._events || !this._events[a])return this;
            d = this._events[a];
            c = d.length;
            g = -1;
            if (d === e || b(d.listener) && d.listener === e) delete this._events[a], this._events.removeListener && this.emit("removeListener", a, e); else if (f(d)) {
                for (; 0 < c--;)if (d[c] === e || d[c].listener &&
                    d[c].listener === e) {
                    g = c;
                    break
                }
                if (0 > g)return this;
                1 === d.length ? (d.length = 0, delete this._events[a]) : d.splice(g, 1);
                this._events.removeListener && this.emit("removeListener", a, e)
            }
            return this
        };
        a.prototype.removeAllListeners = function (a) {
            var d;
            if (!this._events)return this;
            if (!this._events.removeListener)return 0 === arguments.length ? this._events = {} : this._events[a] && delete this._events[a], this;
            if (0 === arguments.length) {
                for (d in this._events)"removeListener" !== d && this.removeAllListeners(d);
                this.removeAllListeners("removeListener");
                this._events = {};
                return this
            }
            d = this._events[a];
            if (b(d)) this.removeListener(a, d); else for (; d.length;)this.removeListener(a, d[d.length - 1]);
            delete this._events[a];
            return this
        };
        a.prototype.listeners = function (a) {
            return this._events && this._events[a] ? b(this._events[a]) ? [this._events[a]] : this._events[a].slice() : []
        };
        a.listenerCount = function (a, e) {
            return a._events && a._events[e] ? b(a._events[e]) ? 1 : a._events[e].length : 0
        }
    }, {}],
    25: [function (g, m, k) {
        k.read = function (a, b, f, d, e) {
            var g;
            g = 8 * e - d - 1;
            var k = (1 << g) - 1, c = k >> 1, p =
                -7;
            e = f ? e - 1 : 0;
            var u = f ? -1 : 1, n = a[b + e];
            e += u;
            f = n & (1 << -p) - 1;
            n >>= -p;
            for (p += g; 0 < p; f = 256 * f + a[b + e], e += u, p -= 8);
            g = f & (1 << -p) - 1;
            f >>= -p;
            for (p += d; 0 < p; g = 256 * g + a[b + e], e += u, p -= 8);
            if (0 === f) f = 1 - c; else {
                if (f === k)return g ? NaN : Infinity * (n ? -1 : 1);
                g += Math.pow(2, d);
                f -= c
            }
            return (n ? -1 : 1) * g * Math.pow(2, f - d)
        };
        k.write = function (a, b, f, d, e, g) {
            var l, c = 8 * g - e - 1, p = (1 << c) - 1, k = p >> 1, n = 23 === e ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
            g = d ? 0 : g - 1;
            var v = d ? 1 : -1, t = 0 > b || 0 === b && 0 > 1 / b ? 1 : 0;
            b = Math.abs(b);
            isNaN(b) || Infinity === b ? (b = isNaN(b) ? 1 : 0, d = p) : (d = Math.floor(Math.log(b) /
                    Math.LN2), 1 > b * (l = Math.pow(2, -d)) && (d--, l *= 2), b = 1 <= d + k ? b + n / l : b + n * Math.pow(2, 1 - k), 2 <= b * l && (d++, l /= 2), d + k >= p ? (b = 0, d = p) : 1 <= d + k ? (b = (b * l - 1) * Math.pow(2, e), d += k) : (b = b * Math.pow(2, k - 1) * Math.pow(2, e), d = 0));
            for (; 8 <= e; a[f + g] = b & 255, g += v, b /= 256, e -= 8);
            d = d << e | b;
            for (c += e; 0 < c; a[f + g] = d & 255, g += v, d /= 256, c -= 8);
            a[f + g - v] |= 128 * t
        }
    }, {}],
    26: [function (g, m, k) {
        var a = Object.prototype.toString;
        m.exports = Array.isArray || function (b) {
                return !!b && "[object Array]" == a.call(b)
            }
    }, {}],
    27: [function (g, m, k) {
        m.exports.RTCIceCandidate = g("./rtcicecandidate");
        m.exports.RTCPeerConnection = g("./rtcpeerconnection");
        m.exports.RTCSessionDescription = g("./rtcsessiondescription")
    }, {"./rtcicecandidate": 30, "./rtcpeerconnection": 31, "./rtcsessiondescription": 33}],
    28: [function (g, m, k) {
        function a(b, f, d, e, g, k, c, p, u, n) {
            if (!(this instanceof a))return new a(b, f, d, e, g, k, c, p, u, n);
            var l = !1;
            b = b || "0.0.0.0";
            c = "number" === typeof c ? c : 9;
            p = "boolean" === typeof p ? p : !0;
            u = u || null;
            n = n || null;
            Object.defineProperties(this, {
                _address: {
                    get: function () {
                        return b
                    }, set: function (a) {
                        b = a
                    }
                }, _candidates: {value: []},
                _port: {
                    get: function () {
                        return c
                    }, set: function (a) {
                        c = a
                    }
                }, _rejected: {
                    get: function () {
                        return l
                    }, set: function (a) {
                        l = a
                    }
                }, _streamId: {
                    get: function () {
                        return u
                    }, set: function (a) {
                        u = a
                    }
                }, _track: {
                    get: function () {
                        return n
                    }, set: function (a) {
                        n = a
                    }
                }, _triples: {value: new Set}, candidates: {
                    enumerable: !0, get: function () {
                        return this._candidates.slice()
                    }
                }, capabilities: {enumerable: !0, value: d}, defaultCandidate: {
                    enumerable: !0, get: function () {
                        return this._candidates.length ? this._candidates[0] : null
                    }
                }, direction: {enumerable: !0, value: e},
                kind: {enumerable: !0, value: g}, port: {
                    enumerable: !0, get: function () {
                        return c
                    }
                }, rtcpMux: {enumerable: !0, value: p}, streamId: {
                    enumerable: !0, get: function () {
                        return u
                    }
                }, track: {
                    enumerable: !0, get: function () {
                        return n
                    }
                }
            });
            f && f.forEach(this.addCandidate, this)
        }

        a.prototype.addCandidate = function (a) {
            var b = [a.ip, a.port, a.protocol].join(" ");
            return this._triples.has(b) ? !1 : (this._triples.add(b), this._candidates.push(a), !0)
        };
        a.prototype.copy = function (b, f, d, e, g, k, c) {
            return new a(this.address, f, d || this.capabilities, e || this.direction,
                this.kind, this.mid, g, this.rtcpMux, k, c)
        };
        a.prototype.copyAndReject = function () {
            return (new a(null, this.candidates, this.capabilities, this.direction, this.kind, this.mid, null, this.rtcpMux)).reject()
        };
        a.prototype.reject = function () {
            this.setPort(0);
            return this
        };
        a.prototype.setAddress = function (a) {
            this._address = a;
            return this
        };
        a.prototype.setPort = function (a) {
            this._port = a;
            return this
        };
        m.exports = a
    }, {}],
    29: [function (g, m, k) {
        function a(b, f) {
            if (!(this instanceof a))return new a(b, f);
            Event.call(this, b, f);
            Object.defineProperties(this,
                {stream: {enumerable: !0, value: f.stream}})
        }

        m.exports = a
    }, {}],
    30: [function (g, m, k) {
        function a(b) {
            if (!(this instanceof a))return new a(b);
            Object.defineProperties(this, {
                candidate: {enumerable: !0, value: b.candidate},
                sdpMLineIndex: {enumerable: !0, value: b.sdpMLineIndex}
            })
        }

        m.exports = a
    }, {}],
    31: [function (g, m, k) {
        function a(b) {
            if (!(this instanceof a))return new a(b);
            b = {gatherPolicy: b.gatherPolicy || "all", iceServers: []};
            var c = new RTCIceGatherer(b), d = !1;
            c.onlocalcandidate = this._onlocalcandidate.bind(this);
            var e = null,
                f = !1, n = 0, g = new RTCIceTransport, l = null;
            g.onicestatechange = this._onicestatechange.bind(this);
            var p = new RTCDtlsTransport(g);
            p.ondtlsstatechange = this._ondtlsstatechange.bind(this);
            var h = "stable", k = null, r = null, u = null, m = null;
            Object.defineProperties(this, {
                _dtlsTransport: {value: p},
                _dtmfSenders: {value: new Map},
                _gatherOptions: {value: b},
                _iceCandidatesAdded: {
                    get: function () {
                        return n
                    }, set: function (a) {
                        n = a
                    }
                },
                _iceGatherer: {value: c},
                _iceGatheringCompleted: {
                    get: function () {
                        return d
                    }, set: function (a) {
                        d = a
                    }
                },
                _iceTransport: {value: g},
                _localCandidates: {value: new Set},
                _localDescription: {
                    get: function () {
                        return r
                    }, set: function (a) {
                        r = a
                    }
                },
                _localStreams: {value: []},
                _midCounters: {value: {audio: 0, video: 0}},
                _remoteCandidates: {value: new Set},
                _remoteDescription: {
                    get: function () {
                        return u
                    }, set: function (a) {
                        u = a
                    }
                },
                _remoteStreams: {value: []},
                _rtpReceivers: {value: new Map},
                _rtpSenders: {value: new Map},
                _signalingState: {
                    get: function () {
                        return h
                    }, set: function (a) {
                        h = a;
                        if (this.onsignalingstatechange) this.onsignalingstatechange()
                    }
                },
                _streamIds: {value: new Map},
                iceConnectionState: {
                    enumerable: !0,
                    get: function () {
                        return g.state
                    }
                },
                iceGatheringState: {
                    enumerable: !0, get: function () {
                        return d ? "gathering" : "complete"
                    }
                },
                localDescription: {
                    enumerable: !0, get: function () {
                        return r
                    }
                },
                onaddstream: {
                    enumerable: !0, get: function () {
                        return m
                    }, set: function (a) {
                        m = a
                    }
                },
                onicecandidate: {
                    enumerable: !0, get: function () {
                        return e
                    }, set: function (a) {
                        e = a;
                        if (!f)try {
                            c.getLocalCandidates().forEach(c.onlocalcandidate)
                        } catch (E) {
                        }
                        f = !0
                    }
                },
                oniceconnectionstatechange: {
                    enumerable: !0, get: function () {
                        return l
                    }, set: function (a) {
                        l = a
                    }
                },
                onsignalingstatechange: {
                    enumerable: !0,
                    get: function () {
                        return k
                    }, set: function (a) {
                        k = a
                    }
                },
                remoteDescription: {
                    enumerable: !0, get: function () {
                        return u
                    }
                },
                signalingState: {
                    enumerable: !0, get: function () {
                        return h
                    }
                }
            })
        }

        function b(a) {
            return Error("Invalid signaling state: " + a)
        }

        function f(a, b) {
            var c = [];
            a.forEach(function (a) {
                b.forEach(function (b) {
                    a.name === b.name && a.clockRate === b.clockRate && a.numChannels === b.numChannels && c.push(b)
                })
            });
            return c
        }

        var d = g("./mediasection"), e = g("./mediastreamevent"), l = g("./rtcicecandidate"), r = g("./rtcpeerconnectioniceevent"),
            c = g("./rtcsessiondescription"), p = g("sdp-transform"), u = g("./sdp-utils");
        a.prototype._makeMid = function (a) {
            return a + ++this._midCounters[a]
        };
        a.prototype._ondtlsstatechange = function (a) {
            void 0
        };
        a.prototype._onicestatechange = function (a) {
            if (this.oniceconnectionstatechange) this.oniceconnectionstatechange(a)
        };
        a.prototype._onlocalcandidate = function (a) {
            Object.keys(a.candidate).length || (this._iceGatheringCompleted = !0);
            this._localCandidates.add(a.candidate);
            if (this.onicecandidate) {
                a = a.candidate;
                if (Object.keys(a).length) {
                    var b =
                        ["a=candidate", a.foundation, 1, a.protocol, a.priority, a.ip, a.port, a.type];
                    a.relatedAddress && (b = b.concat(["raddr", a.relatedAddress, "rport", a.relatedPort]));
                    b.push("generation 0");
                    a = new l({candidate: b.join(" "), sdpMLineIndex: 0})
                } else a = null;
                this.onicecandidate(new r("icecandidate", {candidate: a}))
            }
        };
        a.prototype._sendRtp = function (a) {
            var b = a.kind;
            this._rtpSenders.forEach(function (c) {
                c.track.kind === b && c.send(a.capabilities)
            }, this);
            return this
        };
        a.prototype._sendAndReceiveRtp = function (a) {
            a.forEach(function (a) {
                "sendrecv" !==
                a.direction && "sendonly" !== a.direction || this._sendRtp(a);
                "sendrecv" !== a.direction && "recvonly" !== a.direction || this._receiveRtp(a)
            }, this);
            return this
        };
        a.prototype._receiveRtp = function (a) {
            var b = new RTCRtpReceiver(this._dtlsTransport, a.capabilities.type);
            b.receive(a.capabilities);
            a = b.track;
            this._rtpReceivers.set(a, b);
            b = new MediaStream;
            b.addTrack(a);
            this._remoteStreams.push(b);
            if (this.onaddstream) this.onaddstream(new e("addstream", {stream: b}));
            return this
        };
        a.prototype._startDtlsTransport = function (a) {
            this._dtlsTransport.start(a);
            return this
        };
        a.prototype._startIceTransport = function (a) {
            this._iceTransport.start(this._iceGatherer, a, "have-local-offer" === this.signalingState ? "controlling" : "controlled");
            return this
        };
        a.prototype.addIceCandidate = function (a, b, c) {
            void 0;
            this._iceCandidatesAdded++;
            a ? (c = a.candidate.indexOf("candidate:"), a = a.candidate.slice(c + 10).replace(/ +/g, " ").split(" "), c = {
                    foundation: a[0],
                    protocol: a[2],
                    priority: parseInt(a[3]),
                    ip: a[4],
                    port: parseInt(a[5]),
                    type: a[7],
                    relatedAddress: null,
                    relatedPort: 0,
                    tcpType: "active"
                },
                "host" !== c.type && (c.relatedAddress = a[9], c.relatedPort = parseInt(a[11])), a = c) : a = {};
            c = [a.ip, a.port, a.transport].join(" ");
            this._remoteCandidates.has(c) || (this._remoteCandidates.add(c), this._iceTransport.addRemoteCandidate(a));
            b && b()
        };
        a.prototype.addStream = function (a) {
            this._localStreams.push(a);
            a.getTracks().forEach(function (b) {
                var c = new RTCRtpSender(b, this._dtlsTransport);
                this._rtpSenders.set(b, c);
                this._streamIds.set(b, a.id)
            }, this)
        };
        a.prototype.close = function () {
            this._signalingState = "closed";
            this._rtpReceivers.forEach(function (a) {
                a.stop()
            });
            this._dtlsTransport.stop();
            this._iceTransport.stop()
        };
        a.prototype.createAnswer = function (a, d) {
            if ("have-remote-offer" !== this.signalingState)return void d(b(this.signalingState));
            var e = u.parseDescription(this.remoteDescription), g = {audio: [], video: []};
            this.getLocalStreams().forEach(function (a) {
                g.audio = g.audio.concat(a.getAudioTracks());
                g.video = g.video.concat(a.getVideoTracks())
            });
            e = e.mediaSections.map(function (a) {
                var b = a.kind, c = a.direction, d = a.capabilities, e = RTCRtpSender.getCapabilities(b), e = f(d.codecs,
                    e.codecs), d = {codecs: e}, l;
                if (!e.length)return a.copyAndReject();
                "inactive" === c || "recvonly" === c && !g[b].length ? b = "inactive" : "recvonly" === c ? (l = g[b].shift(), b = "sendonly") : b = "sendrecv" === c ? (l = g[b].shift()) ? "sendrecv" : "recvonly" : "recvonly";
                c = this._streamIds.get(l);
                return a.copy(null, null, d, b, null, c, l)
            }, this);
            e.forEach(function (a) {
                this._localCandidates.forEach(a.addCandidate, a)
            }, this);
            var l = u.makeInitialSDPBlob();
            u.addMediaSectionsToSDPBlob(l, e);
            u.addIceParametersToSDPBlob(l, this._iceGatherer.getLocalParameters());
            u.addDtlsParametersToSDPBlob(l, this._dtlsTransport.getLocalParameters());
            e = new c({sdp: p.write(l), type: "answer"});
            a(e)
        };
        a.prototype.createDTMFSender = function (a) {
            if (!this._dtmfSenders.has(a)) {
                var b = this._rtpSenders.get(a), b = new RTCDtmfSender(b);
                this._dtmfSenders.set(a, b)
            }
            return this._dtmfSenders.get(a)
        };
        a.prototype.createOffer = function (a, b, e) {
            var f = {audio: null, video: null}, g = {audio: 0, video: 0};
            e = e || {};
            ["optional", "mandatory"].forEach(function (a) {
                a in e && ("OfferToReceiveAudio" in e[a] && (f.audio = Number(e[a].OfferToReceiveAudio)),
                "OfferToReceiveVideo" in e[a] && (f.video = Number(e[a].OfferToReceiveVideo)))
            });
            var l = [], n = {audio: f.audio, video: f.video};
            this.getLocalStreams().forEach(function (a) {
                var b = a.getAudioTracks(), c = a.getVideoTracks();
                g.audio += b.length;
                g.video += c.length;
                b.concat(c).forEach(function (b) {
                    var c = b.kind, e = RTCRtpSender.getCapabilities(c), f, g = this._makeMid(c);
                    null === n.audio ? f = "sendrecv" : n[c] ? (n[c]--, f = "sendrecv") : f = "sendonly";
                    b = new d(null, null, e, f, c, g, null, null, a.id, b);
                    l.push(b)
                }, this)
            }, this);
            ["audio", "video"].forEach(function (a) {
                var b =
                    Math.max(f[a] - g[a], 0);
                if (b)for (var c = RTCRtpSender.getCapabilities(a), e; b--;)e = this._makeMid(a), e = new d(null, null, c, "recvonly", a, e), l.push(e)
            }, this);
            l.forEach(function (a) {
                this._localCandidates.forEach(a.addCandidate, a)
            }, this);
            b = u.makeInitialSDPBlob();
            u.addMediaSectionsToSDPBlob(b, l);
            u.addIceParametersToSDPBlob(b, this._iceGatherer.getLocalParameters());
            u.addDtlsParametersToSDPBlob(b, this._dtlsTransport.getLocalParameters());
            b = new c({sdp: p.write(b), type: "offer"});
            a(b)
        };
        a.prototype.getLocalStreams = function () {
            return this._localStreams.slice()
        };
        a.prototype.getRemoteStreams = function () {
            return this._remoteStreams.slice()
        };
        a.prototype.setLocalDescription = function (a, c, d) {
            switch (this.signalingState) {
                case "stable":
                    d = "have-local-offer";
                    break;
                case "have-remote-offer":
                    d = "stable";
                    break;
                default:
                    return void d(b(this.signalingState))
            }
            var e = u.parseDescription(a);
            if ("have-remote-offer" === this.signalingState) {
                e.mediaSections.forEach(this._sendRtp, this);
                var f = u.parseDescription(this.remoteDescription).mediaSections[0].capabilities.encodings[0].ssrc;
                e.mediaSections.forEach(function (a) {
                    a.capabilities.encodings.forEach(function (a) {
                        a.ssrc =
                            f
                    });
                    a.capabilities.rtcp.ssrc = f
                });
                e.mediaSections.forEach(this._receiveRtp, this)
            }
            this._localDescription = a;
            this._signalingState = d;
            c()
        };
        a.prototype.setRemoteDescription = function (a, c, d) {
            switch (this.signalingState) {
                case "stable":
                    d = "have-remote-offer";
                    break;
                case "have-local-offer":
                    d = "stable";
                    break;
                default:
                    return void d(b(this.signalingState))
            }
            var e = u.parseDescription(a);
            e.mediaSections.forEach(function (a) {
                a.candidates.forEach(this._iceTransport.addRemoteCandidate, this._iceTransport)
            }, this);
            this._startIceTransport(e.iceParameters[0]);
            this._startDtlsTransport(e.dtlsParameters[0]);
            "have-local-offer" === this.signalingState && (e.mediaSections.forEach(this._receiveRtp, this), e.mediaSections.forEach(this._sendRtp, this));
            this._remoteDescription = a;
            this._signalingState = d;
            c()
        };
        m.exports = a
    }, {
        "./mediasection": 28,
        "./mediastreamevent": 29,
        "./rtcicecandidate": 30,
        "./rtcpeerconnectioniceevent": 32,
        "./rtcsessiondescription": 33,
        "./sdp-utils": 34,
        "sdp-transform": 37
    }],
    32: [function (g, m, k) {
        function a(b, f) {
            if (!(this instanceof a))return new a(b, f);
            Event.call(this,
                b, f);
            Object.defineProperties(this, {candidate: {enumerable: !0, value: f.candidate}})
        }

        m.exports = a
    }, {}],
    33: [function (g, m, k) {
        function a(b) {
            if (!(this instanceof a))return new a(b);
            Object.defineProperties(this, {sdp: {enumerable: !0, value: b.sdp}, type: {enumerable: !0, value: b.type}})
        }

        m.exports = a
    }, {}],
    34: [function (g, m, k) {
        function a(a, b, c) {
            a = a || {};
            a.candidates = a.candidates || [];
            if (!b)return a;
            b.forEach(function (b) {
                if (b.foundation) {
                    var d = {
                        foundation: b.foundation, transport: b.protocol, priority: b.priority, ip: b.ip, port: b.port,
                        type: b.type, generation: 0
                    };
                    b.relatedAddress && (d.raddr = b.relatedAddress, d.rport = b.relatedPort);
                    if ("number" === typeof c) d.component = c, a.candidates.push(d); else {
                        d.component = 1;
                        a.candidates.push(d);
                        b = {};
                        for (var e in d)b[e] = d[e];
                        b.component = 2;
                        a.candidates.push(b)
                    }
                } else a.endOfCandidates = "end-of-candidates"
            });
            return a
        }

        function b(b, c, d) {
            b = b || {};
            if (!b.media)return b;
            b.media.forEach(function (b) {
                a(b, c, d)
            });
            return b
        }

        function f(a, b) {
            a = a || {};
            if (!a.media)return a;
            a.media.forEach(function (a) {
                a = a || {};
                var c = b.fingerprints;
                c.length && (a.fingerprint = {type: c[0].algorithm, hash: c[0].value})
            });
            return a
        }

        function d(a, b) {
            a = a || {};
            if (!a.media)return a;
            a.media.forEach(function (a) {
                a = a || {};
                a.iceUfrag = b.usernameFragment;
                a.icePwd = b.password
            });
            return a
        }

        function e(b, c) {
            var d = c.streamId;
            d && (b.msidSemantic = b.msidSemantic || {semantic: "WMS", token: []}, b.msidSemantic.token.push(d));
            var e = c.mid;
            if (e) {
                b.groups = b.groups || [];
                var f = !1;
                b.groups.forEach(function (a) {
                    "BUNDLE" === a.type && (a.mids.push(e), f = !0)
                });
                f || b.groups.push({type: "BUNDLE", mids: [e]})
            }
            var g =
                [], k = [], r = [];
            c.capabilities.codecs.forEach(function (a) {
                var b = a.preferredPayloadType;
                g.push(b);
                var c = {payload: b, codec: a.name, rate: a.clockRate};
                1 < a.numChannels && (c.encoding = a.numChannels);
                k.push(c);
                switch (a.name) {
                    case "telephone-event":
                        a.parameters && a.parameters.events && r.push({payload: b, config: a.parameters.events})
                }
            });
            var p = [];
            if (d && c.track)var d = Math.floor(4294967296 * Math.random()), m = l(), u = c.track.id, p = p.concat([{
                id: d,
                attribute: "cname",
                value: m
            }, {id: d, attribute: "msid", value: c.streamId + " " + u}, {
                id: d,
                attribute: "mslabel", value: u
            }, {id: d, attribute: "label", value: u}]);
            d = c.defaultCandidate;
            p = {
                rtp: k,
                fmtp: r,
                type: c.kind,
                port: d ? d.port : 9,
                payloads: g.join(" "),
                protocol: "RTP/SAVPF",
                direction: c.direction,
                connection: {version: 4, ip: d ? d.ip : "0.0.0.0"},
                rtcp: {port: d ? d.port : 9, netType: "IN", ipVer: 4, address: d ? d.ip : "0.0.0.0"},
                ssrcs: p
            };
            e && (p.mid = e);
            c.rtcpMux && (p.rtcpMux = "rtcp-mux");
            a(p, c.candidates);
            b.media.push(p);
            return b
        }

        function l() {
            for (var a = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/".split(""),
                     b = 16, c = ""; b--;)c += a[Math.floor(Math.random() * a.length)];
            return c
        }

        var r = g("./mediasection"), c = g("sdp-transform");
        m.exports.addCandidatesToSDPBlob = function (a, c, d) {
            a = a || {};
            b(a, c, d);
            return a
        };
        m.exports.addDtlsParametersToSDPBlob = function (a, b) {
            a = a || {};
            f(a, b);
            return a
        };
        m.exports.addIceParametersToSDPBlob = function (a, b) {
            a = a || {};
            d(a, b);
            return a
        };
        m.exports.addMediaSectionsToSDPBlob = function (a, b) {
            b.forEach(e.bind(null, a));
            return a
        };
        m.exports.makeInitialSDPBlob = function (a) {
            a = a || Math.floor(4294967296 * Math.random());
            return {
                version: 0,
                origin: {username: "-", sessionId: a, sessionVersion: 0, netType: "IN", ipVer: 4, address: "127.0.0.1"},
                name: "-",
                timing: {start: 0, stop: 0},
                connection: {version: 4, ip: "0.0.0.0"},
                media: []
            }
        };
        m.exports.parseDescription = function (a) {
            a = c.parse(a.sdp);
            var b = [], d = [], e = [], f = [], g = [a];
            a.media && (g = g.concat(a.media));
            g.forEach(function (a) {
                a.iceUfrag && a.icePwd && a.fingerprint && (b.push({
                    usernameFragment: a.iceUfrag,
                    password: a.icePwd
                }), d.push({fingerprints: [{algorithm: a.fingerprint.type, value: a.fingerprint.hash}]}));
                if (a.rtp && "video" !== a.type) {
                    var c = a.connection ? a.connection.ip : null, g = a.direction, l = a.type, k = a.mid, h = a.port || null, n = "rtcp-mux" === a.rtcpMux, m, p, u;
                    (a.ssrcs || []).forEach(function (a) {
                        switch (a.attribute) {
                            case "cname":
                                p = a.id;
                                m = a.value;
                                break;
                            case "label":
                            case "mslabel":
                                p = a.id;
                                break;
                            case "msid":
                                p = a.id, u = a.value.split(" ")[0]
                        }
                    });
                    var v = {
                        type: l, muxId: k, codecs: a.rtp.map(function (a) {
                            var b = {
                                name: a.codec,
                                payloadType: parseInt(a.payload),
                                clockRate: parseInt(a.rate),
                                numChannels: a.encoding || 1,
                                rtcpFeedback: [],
                                parameters: {}
                            };
                            switch (a.codec) {
                                case "telephone-event":
                                    b.parameters.events = "0-16"
                            }
                            return b
                        }), headerExtensions: [], encodings: a.rtp.map(function (a) {
                            return {ssrc: p, codecPayloadType: parseInt(a.payload), active: !0}
                        }), rtcp: {ssrc: p, cname: m, mux: n}
                    }, t = new r(c, e, v, g, l, k, h, n, u);
                    (a.candidates || []).forEach(function (a) {
                        a = {
                            foundation: String(a.foundation),
                            protocol: a.transport,
                            priority: a.priority,
                            ip: a.ip,
                            port: a.port,
                            type: a.type,
                            relatedAddress: a.raddr,
                            relatedPort: a.rport
                        };
                        e.push(a);
                        t.addCandidate(a)
                    });
                    void 0;
                    "end-of-candidates" === a.endOfCandidates &&
                    t.addCandidate({});
                    f.push(t)
                }
            });
            return {iceParameters: b, dtlsParameters: d, mediaSections: f}
        }
    }, {"./mediasection": 28, "sdp-transform": 37}],
    35: [function (g, m, k) {
        function a() {
        }

        g = m.exports = {};
        g.nextTick = function () {
            if ("undefined" !== typeof window && window.setImmediate)return function (a) {
                return window.setImmediate(a)
            };
            if ("undefined" !== typeof window && window.postMessage && window.addEventListener) {
                var a = [];
                window.addEventListener("message", function (b) {
                    var d = b.source;
                    d !== window && null !== d || "process-tick" !== b.data || (b.stopPropagation(),
                    0 < a.length && a.shift()())
                }, !0);
                return function (b) {
                    a.push(b);
                    window.postMessage("process-tick", "*")
                }
            }
            return function (a) {
                setTimeout(a, 0)
            }
        }();
        g.title = "browser";
        g.browser = !0;
        g.env = {};
        g.argv = [];
        g.on = a;
        g.addListener = a;
        g.once = a;
        g.off = a;
        g.removeListener = a;
        g.removeAllListeners = a;
        g.emit = a;
        g.binding = function (a) {
            throw Error("process.binding is not supported");
        };
        g.cwd = function () {
            return "/"
        };
        g.chdir = function (a) {
            throw Error("process.chdir is not supported");
        }
    }, {}],
    36: [function (g, m, k) {
        var a = m.exports = {
            v: [{
                name: "version",
                reg: /^(\d*)$/
            }],
            o: [{
                name: "origin",
                reg: /^(\S*) (\d*) (\d*) (\S*) IP(\d) (\S*)/,
                names: "username sessionId sessionVersion netType ipVer address".split(" "),
                format: "%s %s %d %s IP%d %s"
            }],
            s: [{name: "name"}],
            i: [{name: "description"}],
            u: [{name: "uri"}],
            e: [{name: "email"}],
            p: [{name: "phone"}],
            z: [{name: "timezones"}],
            r: [{name: "repeats"}],
            t: [{name: "timing", reg: /^(\d*) (\d*)/, names: ["start", "stop"], format: "%d %d"}],
            c: [{name: "connection", reg: /^IN IP(\d) (\S*)/, names: ["version", "ip"], format: "IN IP%d %s"}],
            b: [{
                push: "bandwidth",
                reg: /^(TIAS|AS|CT|RR|RS):(\d*)/, names: ["type", "limit"], format: "%s:%s"
            }],
            m: [{
                reg: /^(\w*) (\d*) ([\w\/]*)(?: (.*))?/,
                names: ["type", "port", "protocol", "payloads"],
                format: "%s %d %s %s"
            }],
            a: [{
                push: "rtp",
                reg: /^rtpmap:(\d*) ([\w\-\.]*)(?:\s*\/(\d*)(?:\s*\/(\S*))?)?/,
                names: ["payload", "codec", "rate", "encoding"],
                format: function (a) {
                    return a.encoding ? "rtpmap:%d %s/%s/%s" : a.rate ? "rtpmap:%d %s/%s" : "rtpmap:%d %s"
                }
            }, {push: "fmtp", reg: /^fmtp:(\d*) ([\S| ]*)/, names: ["payload", "config"], format: "fmtp:%d %s"}, {
                name: "control",
                reg: /^control:(.*)/, format: "control:%s"
            }, {
                name: "rtcp",
                reg: /^rtcp:(\d*)(?: (\S*) IP(\d) (\S*))?/,
                names: ["port", "netType", "ipVer", "address"],
                format: function (a) {
                    return null != a.address ? "rtcp:%d %s IP%d %s" : "rtcp:%d"
                }
            }, {
                push: "rtcpFbTrrInt",
                reg: /^rtcp-fb:(\*|\d*) trr-int (\d*)/,
                names: ["payload", "value"],
                format: "rtcp-fb:%d trr-int %d"
            }, {
                push: "rtcpFb",
                reg: /^rtcp-fb:(\*|\d*) ([\w-_]*)(?: ([\w-_]*))?/,
                names: ["payload", "type", "subtype"],
                format: function (a) {
                    return null != a.subtype ? "rtcp-fb:%s %s %s" : "rtcp-fb:%s %s"
                }
            },
                {
                    push: "ext",
                    reg: /^extmap:([\w_\/]*) (\S*)(?: (\S*))?/,
                    names: ["value", "uri", "config"],
                    format: function (a) {
                        return null != a.config ? "extmap:%s %s %s" : "extmap:%s %s"
                    }
                }, {
                    push: "crypto",
                    reg: /^crypto:(\d*) ([\w_]*) (\S*)(?: (\S*))?/,
                    names: ["id", "suite", "config", "sessionConfig"],
                    format: function (a) {
                        return null != a.sessionConfig ? "crypto:%d %s %s %s" : "crypto:%d %s %s"
                    }
                }, {name: "setup", reg: /^setup:(\w*)/, format: "setup:%s"}, {
                    name: "mid",
                    reg: /^mid:([^\s]*)/,
                    format: "mid:%s"
                }, {name: "msid", reg: /^msid:(.*)/, format: "msid:%s"},
                {name: "ptime", reg: /^ptime:(\d*)/, format: "ptime:%d"}, {
                    name: "maxptime",
                    reg: /^maxptime:(\d*)/,
                    format: "maxptime:%d"
                }, {name: "direction", reg: /^(sendrecv|recvonly|sendonly|inactive)/}, {
                    name: "icelite",
                    reg: /^(ice-lite)/
                }, {name: "iceUfrag", reg: /^ice-ufrag:(\S*)/, format: "ice-ufrag:%s"}, {
                    name: "icePwd",
                    reg: /^ice-pwd:(\S*)/,
                    format: "ice-pwd:%s"
                }, {
                    name: "fingerprint",
                    reg: /^fingerprint:(\S*) (\S*)/,
                    names: ["type", "hash"],
                    format: "fingerprint:%s %s"
                }, {
                    push: "candidates",
                    reg: /^candidate:(\S*) (\d*) (\S*) (\d*) (\S*) (\d*) typ (\S*)(?: raddr (\S*) rport (\d*))?(?: tcptype (\S*))?(?: generation (\d*))?(?: network-id (\d*))?(?: network-cost (\d*))?/,
                    names: "foundation component transport priority ip port type raddr rport tcptype generation network-id network-cost".split(" "),
                    format: function (a) {
                        var b;
                        b = "candidate:%s %d %s %d %s %d typ %s" + (null != a.raddr ? " raddr %s rport %d" : "%v%v");
                        b += null != a.tcptype ? " tcptype %s" : "%v";
                        null != a.generation && (b += " generation %d");
                        b += null != a["network-id"] ? " network-id %d" : "%v";
                        return b += null != a["network-cost"] ? " network-cost %d" : "%v"
                    }
                }, {name: "endOfCandidates", reg: /^(end-of-candidates)/}, {
                    name: "remoteCandidates", reg: /^remote-candidates:(.*)/,
                    format: "remote-candidates:%s"
                }, {name: "iceOptions", reg: /^ice-options:(\S*)/, format: "ice-options:%s"}, {
                    push: "ssrcs",
                    reg: /^ssrc:(\d*) ([\w_]*)(?::(.*))?/,
                    names: ["id", "attribute", "value"],
                    format: function (a) {
                        var b = "ssrc:%d";
                        null != a.attribute && (b += " %s", null != a.value && (b += ":%s"));
                        return b
                    }
                }, {
                    push: "ssrcGroups",
                    reg: /^ssrc-group:(\w*) (.*)/,
                    names: ["semantics", "ssrcs"],
                    format: "ssrc-group:%s %s"
                }, {
                    name: "msidSemantic",
                    reg: /^msid-semantic:\s?(\w*) (\S*)/,
                    names: ["semantic", "token"],
                    format: "msid-semantic: %s %s"
                },
                {
                    push: "groups",
                    reg: /^group:(\w*) (.*)/,
                    names: ["type", "mids"],
                    format: "group:%s %s"
                }, {name: "rtcpMux", reg: /^(rtcp-mux)/}, {name: "rtcpRsize", reg: /^(rtcp-rsize)/}, {
                    name: "sctpmap",
                    reg: /^sctpmap:([\w_\/]*) (\S*)(?: (\S*))?/,
                    names: ["sctpmapNumber", "app", "maxMessageSize"],
                    format: function (a) {
                        return null != a.maxMessageSize ? "sctpmap:%s %s %s" : "sctpmap:%s %s"
                    }
                }, {push: "invalid", names: ["value"]}]
        };
        Object.keys(a).forEach(function (b) {
            a[b].forEach(function (a) {
                a.reg || (a.reg = /(.*)/);
                a.format || (a.format = "%s")
            })
        })
    }, {}],
    37: [function (g, m, k) {
        m = g("./parser");
        g = g("./writer");
        k.write = g;
        k.parse = m.parse;
        k.parseFmtpConfig = m.parseFmtpConfig;
        k.parsePayloads = m.parsePayloads;
        k.parseRemoteCandidates = m.parseRemoteCandidates
    }, {"./parser": 38, "./writer": 39}],
    38: [function (g, m, k) {
        var a = function (a) {
            return String(Number(a)) === a ? Number(a) : a
        }, b = g("./grammar"), f = RegExp.prototype.test.bind(/^([a-z])=(.*)/);
        k.parse = function (d) {
            var e = {}, g = [], c = e;
            d.split(/(\r\n|\r|\n)/).filter(f).forEach(function (d) {
                var e = d[0], f = d.slice(2);
                "m" === e && (g.push({
                    rtp: [],
                    fmtp: []
                }), c = g[g.length - 1]);
                for (d = 0; d < (b[e] || []).length; d += 1) {
                    var l = b[e][d];
                    if (l.reg.test(f)) {
                        e = l;
                        d = c;
                        l = f;
                        f = e.name && e.names;
                        e.push && !d[e.push] ? d[e.push] = [] : f && !d[e.name] && (d[e.name] = {});
                        var f = e.push ? {} : f ? d[e.name] : d, l = l.match(e.reg), k = f, r = e.names, m = e.name;
                        if (m && !r) k[m] = a(l[1]); else for (m = 0; m < r.length; m += 1)null != l[m + 1] && (k[r[m]] = a(l[m + 1]));
                        e.push && d[e.push].push(f);
                        break
                    }
                }
            });
            e.media = g;
            return e
        };
        var d = function (b, d) {
            var e = d.split(/=(.+)/, 2);
            2 === e.length && (b[e[0]] = a(e[1]));
            return b
        };
        k.parseFmtpConfig =
            function (a) {
                return a.split(/\;\s?/).reduce(d, {})
            };
        k.parsePayloads = function (a) {
            return a.split(" ").map(Number)
        };
        k.parseRemoteCandidates = function (b) {
            var d = [];
            b = b.split(" ").map(a);
            for (var e = 0; e < b.length; e += 3)d.push({component: b[e], ip: b[e + 1], port: b[e + 2]});
            return d
        }
    }, {"./grammar": 36}],
    39: [function (g, m, k) {
        var a = g("./grammar"), b = /%[sdv%]/g, f = function (a) {
            var c = 1, d = arguments, e = d.length;
            return a.replace(b, function (a) {
                if (c >= e)return a;
                var b = d[c];
                c += 1;
                switch (a) {
                    case "%%":
                        return "%";
                    case "%s":
                        return String(b);
                    case "%d":
                        return Number(b);
                    case "%v":
                        return ""
                }
            })
        }, d = function (a, b, d) {
            var c = b.format instanceof Function ? b.format(b.push ? d : d[b.name]) : b.format;
            a = [a + "=" + c];
            if (b.names)for (c = 0; c < b.names.length; c += 1) {
                var e = b.names[c];
                b.name ? a.push(d[b.name][e]) : a.push(d[b.names[c]])
            } else a.push(d[b.name]);
            return f.apply(null, a)
        }, e = "vosiuepcbtrza".split(""), l = ["i", "c", "b", "a"];
        m.exports = function (b, c) {
            c = c || {};
            null == b.version && (b.version = 0);
            null == b.name && (b.name = " ");
            b.media.forEach(function (a) {
                null == a.payloads && (a.payloads =
                    "")
            });
            var f = c.innerOrder || l, g = [];
            (c.outerOrder || e).forEach(function (c) {
                a[c].forEach(function (a) {
                    a.name in b && null != b[a.name] ? g.push(d(c, a, b)) : a.push in b && null != b[a.push] && b[a.push].forEach(function (b) {
                            g.push(d(c, a, b))
                        })
                })
            });
            b.media.forEach(function (b) {
                g.push(d("m", a.m[0], b));
                f.forEach(function (c) {
                    a[c].forEach(function (a) {
                        a.name in b && null != b[a.name] ? g.push(d(c, a, b)) : a.push in b && null != b[a.push] && b[a.push].forEach(function (b) {
                                g.push(d(c, a, b))
                            })
                    })
                })
            });
            return g.join("\r\n") + "\r\n"
        }
    }, {"./grammar": 36}],
    40: [function (g, m, k) {
        (function (a, b) {
            "object" === typeof k ? m.exports = b() : "function" === typeof define && define.amd ? define(b) : a.printStackTrace = b()
        })(this, function () {
            function a(b) {
                b = b || {guess: !0};
                var f = b.e || null, d = !!b.guess, e = b.mode || null;
                b = new a.implementation;
                f = b.run(f, e);
                return d ? b.guessAnonymousFunctions(f) : f
            }

            a.implementation = function () {
            };
            a.implementation.prototype = {
                run: function (a, f) {
                    a = a || this.createException();
                    f = f || this.mode(a);
                    return "other" === f ? this.other(arguments.callee) : this[f](a)
                }, createException: function () {
                    try {
                        this.undef()
                    } catch (b) {
                        return b
                    }
                },
                mode: function (a) {
                    return "undefined" !== typeof window && -1 < window.navigator.userAgent.indexOf("PhantomJS") ? "phantomjs" : a.arguments && a.stack ? "chrome" : a.stack && a.sourceURL ? "safari" : a.stack && a.number ? "ie" : a.stack && a.fileName ? "firefox" : a.message && a["opera#sourceloc"] ? !a.stacktrace || -1 < a.message.indexOf("\n") && a.message.split("\n").length > a.stacktrace.split("\n").length ? "opera9" : "opera10a" : a.message && a.stack && a.stacktrace ? 0 > a.stacktrace.indexOf("called from line") ? "opera10b" : "opera11" : a.stack && !a.fileName ?
                                                    "chrome" : "other"
                }, instrumentFunction: function (b, f, d) {
                    b = b || window;
                    var e = b[f];
                    b[f] = function () {
                        d.call(this, a().slice(4));
                        return b[f]._instrumented.apply(this, arguments)
                    };
                    b[f]._instrumented = e
                }, deinstrumentFunction: function (a, f) {
                    a[f].constructor === Function && a[f]._instrumented && a[f]._instrumented.constructor === Function && (a[f] = a[f]._instrumented)
                }, chrome: function (a) {
                    return (a.stack + "\n").replace(/^[\s\S]+?\s+at\s+/, " at ").replace(/^\s+(at eval )?at\s+/gm, "").replace(/^([^\(]+?)([\n$])/gm, "{anonymous}() ($1)$2").replace(/^Object.<anonymous>\s*\(([^\)]+)\)/gm,
                        "{anonymous}() ($1)").replace(/^(.+) \((.+)\)$/gm, "$1@$2").split("\n").slice(0, -1)
                }, safari: function (a) {
                    return a.stack.replace(/\[native code\]\n/m, "").replace(/^(?=\w+Error\:).*$\n/m, "").replace(/^@/gm, "{anonymous}()@").split("\n")
                }, ie: function (a) {
                    return a.stack.replace(/^\s*at\s+(.*)$/gm, "$1").replace(/^Anonymous function\s+/gm, "{anonymous}() ").replace(/^(.+)\s+\((.+)\)$/gm, "$1@$2").split("\n").slice(1)
                }, firefox: function (a) {
                    return a.stack.replace(/(?:\n@:0)?\s+$/m, "").replace(/^(?:\((\S*)\))?@/gm,
                        "{anonymous}($1)@").split("\n")
                }, opera11: function (a) {
                    var b = /^.*line (\d+), column (\d+)(?: in (.+))? in (\S+):$/;
                    a = a.stacktrace.split("\n");
                    for (var d = [], e = 0, g = a.length; e < g; e += 2) {
                        var k = b.exec(a[e]);
                        if (k) {
                            var c = k[4] + ":" + k[1] + ":" + k[2], k = k[3] || "global code", k = k.replace(/<anonymous function: (\S+)>/, "$1").replace(/<anonymous function>/, "{anonymous}");
                            d.push(k + "@" + c + " -- " + a[e + 1].replace(/^\s+/, ""))
                        }
                    }
                    return d
                }, opera10b: function (a) {
                    var b = /^(.*)@(.+):(\d+)$/;
                    a = a.stacktrace.split("\n");
                    for (var d = [], e = 0, g =
                        a.length; e < g; e++) {
                        var k = b.exec(a[e]);
                        k && d.push((k[1] ? k[1] + "()" : "global code") + "@" + k[2] + ":" + k[3])
                    }
                    return d
                }, opera10a: function (a) {
                    var b = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i;
                    a = a.stacktrace.split("\n");
                    for (var d = [], e = 0, g = a.length; e < g; e += 2) {
                        var k = b.exec(a[e]);
                        k && d.push((k[3] || "{anonymous}") + "()@" + k[2] + ":" + k[1] + " -- " + a[e + 1].replace(/^\s+/, ""))
                    }
                    return d
                }, opera9: function (a) {
                    var b = /Line (\d+).*script (?:in )?(\S+)/i;
                    a = a.message.split("\n");
                    for (var d = [], e = 2, g = a.length; e < g; e += 2) {
                        var k =
                            b.exec(a[e]);
                        k && d.push("{anonymous}()@" + k[2] + ":" + k[1] + " -- " + a[e + 1].replace(/^\s+/, ""))
                    }
                    return d
                }, phantomjs: function (a) {
                    var b = /(\S+) \((\S+)\)/i;
                    a = a.stack.split("\n");
                    for (var d = [], e = 1, g = a.length; e < g; e++) {
                        a[e] = a[e].replace(/^\s+at\s+/gm, "");
                        var k = b.exec(a[e]);
                        k ? d.push(k[1] + "()@" + k[2]) : d.push("{anonymous}()@" + a[e])
                    }
                    return d
                }, other: function (a) {
                    for (var b = /function(?:\s+([\w$]+))?\s*\(/, d = [], e, g, k = Array.prototype.slice; a && 10 > d.length;) {
                        e = b.test(a.toString()) ? RegExp.$1 || "{anonymous}" : "{anonymous}";
                        try {
                            g =
                                k.call(a.arguments || [])
                        } catch (c) {
                            g = ["Cannot access arguments: " + c]
                        }
                        d[d.length] = e + "(" + this.stringifyArguments(g) + ")";
                        try {
                            a = a.caller
                        } catch (c) {
                            d[d.length] = "Cannot access caller: " + c;
                            break
                        }
                    }
                    return d
                }, stringifyArguments: function (a) {
                    for (var b = [], d = Array.prototype.slice, e = 0; e < a.length; ++e) {
                        var g = a[e];
                        void 0 === g ? b[e] = "undefined" : null === g ? b[e] = "null" : g.constructor && (b[e] = g.constructor === Array ? 3 > g.length ? "[" + this.stringifyArguments(g) + "]" : "[" + this.stringifyArguments(d.call(g, 0, 1)) + "..." + this.stringifyArguments(d.call(g,
                                            -1)) + "]" : g.constructor === Object ? "#object" : g.constructor === Function ? "#function" : g.constructor === String ? '"' + g + '"' : g.constructor === Number ? g : "?")
                    }
                    return b.join(",")
                }, sourceCache: {}, ajax: function (a) {
                    var b = this.createXMLHTTPObject();
                    if (b)try {
                        return b.open("GET", a, !1), b.send(null), b.responseText
                    } catch (d) {
                    }
                    return ""
                }, createXMLHTTPObject: function () {
                    for (var a, f = [function () {
                        return new XMLHttpRequest
                    }, function () {
                        return new ActiveXObject("Msxml2.XMLHTTP")
                    }, function () {
                        return new ActiveXObject("Msxml3.XMLHTTP")
                    },
                        function () {
                            return new ActiveXObject("Microsoft.XMLHTTP")
                        }], d = 0; d < f.length; d++)try {
                        return a = f[d](), this.createXMLHTTPObject = f[d], a
                    } catch (e) {
                    }
                }, isSameDomain: function (a) {
                    return "undefined" !== typeof location && -1 !== a.indexOf(location.hostname)
                }, getSource: function (a) {
                    a in this.sourceCache || (this.sourceCache[a] = this.ajax(a).split("\n"));
                    return this.sourceCache[a]
                }, guessAnonymousFunctions: function (a) {
                    for (var b = 0; b < a.length; ++b) {
                        var d = /^(.*?)(?::(\d+))(?::(\d+))?(?: -- .+)?$/, e = a[b], g = /\{anonymous\}\(.*\)@(.*)/.exec(e);
                        if (g) {
                            var k = d.exec(g[1]);
                            k && (d = k[1], g = k[2], k = k[3] || 0, d && this.isSameDomain(d) && g && (d = this.guessAnonymousFunction(d, g, k), a[b] = e.replace("{anonymous}", d)))
                        }
                    }
                    return a
                }, guessAnonymousFunction: function (a, f, d) {
                    var b;
                    try {
                        b = this.findFunctionName(this.getSource(a), f)
                    } catch (l) {
                        b = "getSource failed with url: " + a + ", exception: " + l.toString()
                    }
                    return b
                }, findFunctionName: function (a, f) {
                    for (var b = /function\s+([^(]*?)\s*\(([^)]*)\)/, e = /['"]?([$_A-Za-z][$_A-Za-z0-9]*)['"]?\s*[:=]\s*function\b/, g = /['"]?([$_A-Za-z][$_A-Za-z0-9]*)['"]?\s*[:=]\s*(?:eval|new Function)\b/,
                             k = "", c, m = Math.min(f, 20), u, n = 0; n < m; ++n)if (c = a[f - n - 1], u = c.indexOf("//"), 0 <= u && (c = c.substr(0, u)), c)if (k = c + k, (c = e.exec(k)) && c[1] || (c = b.exec(k)) && c[1] || (c = g.exec(k)) && c[1])return c[1];
                    return "(?)"
                }
            };
            return a
        })
    }, {}],
    41: [function (g, m, k) {
        m.exports = "function" === typeof Object.create ? function (a, b) {
                a.super_ = b;
                a.prototype = Object.create(b.prototype, {
                    constructor: {
                        value: a,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                })
            } : function (a, b) {
                a.super_ = b;
                var f = function () {
                };
                f.prototype = b.prototype;
                a.prototype = new f;
                a.prototype.constructor =
                    a
            }
    }, {}],
    42: [function (g, m, k) {
        m.exports = function (a) {
            return a && "object" === typeof a && "function" === typeof a.copy && "function" === typeof a.fill && "function" === typeof a.readUInt8
        }
    }, {}],
    43: [function (g, m, k) {
        (function (a, b) {
            function f(a, b) {
                var c = {seen: [], stylize: e};
                3 <= arguments.length && (c.depth = arguments[2]);
                4 <= arguments.length && (c.colors = arguments[3]);
                C(b) ? c.showHidden = b : b && k._extend(c, b);
                x(c.showHidden) && (c.showHidden = !1);
                x(c.depth) && (c.depth = 2);
                x(c.colors) && (c.colors = !1);
                x(c.customInspect) && (c.customInspect = !0);
                c.colors && (c.stylize = d);
                return m(c, a, c.depth)
            }

            function d(a, b) {
                var c = f.styles[b];
                return c ? "\u001b[" + f.colors[c][0] + "m" + a + "\u001b[" + f.colors[c][1] + "m" : a
            }

            function e(a, b) {
                return a
            }

            function l(a) {
                var b = {};
                a.forEach(function (a, c) {
                    b[a] = !0
                });
                return b
            }

            function m(a, b, d) {
                if (a.customInspect && b && z(b.inspect) && b.inspect !== k.inspect && (!b.constructor || b.constructor.prototype !== b)) {
                    var e = b.inspect(d, a);
                    y(e) || (e = m(a, e, d));
                    return e
                }
                if (e = c(a, b))return e;
                var f = Object.keys(b), g = l(f);
                a.showHidden && (f = Object.getOwnPropertyNames(b));
                if (w(b) && (0 <= f.indexOf("message") || 0 <= f.indexOf("description")))return p(b);
                if (0 === f.length) {
                    if (z(b))return a.stylize("[Function" + (b.name ? ": " + b.name : "") + "]", "special");
                    if (q(b))return a.stylize(RegExp.prototype.toString.call(b), "regexp");
                    if (h(b))return a.stylize(Date.prototype.toString.call(b), "date");
                    if (w(b))return p(b)
                }
                var e = "", G = !1, r = ["{", "}"];
                t(b) && (G = !0, r = ["[", "]"]);
                z(b) && (e = " [Function" + (b.name ? ": " + b.name : "") + "]");
                q(b) && (e = " " + RegExp.prototype.toString.call(b));
                h(b) && (e = " " + Date.prototype.toUTCString.call(b));
                w(b) && (e = " " + p(b));
                if (0 === f.length && (!G || 0 == b.length))return r[0] + e + r[1];
                if (0 > d)return q(b) ? a.stylize(RegExp.prototype.toString.call(b), "regexp") : a.stylize("[Object]", "special");
                a.seen.push(b);
                f = G ? u(a, b, d, g, f) : f.map(function (c) {
                        return n(a, b, d, g, c, G)
                    });
                a.seen.pop();
                return v(f, e, r)
            }

            function c(a, b) {
                if (x(b))return a.stylize("undefined", "undefined");
                if (y(b)) {
                    var c = "'" + JSON.stringify(b).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                    return a.stylize(c, "string")
                }
                if (A(b))return a.stylize("" +
                    b, "number");
                if (C(b))return a.stylize("" + b, "boolean");
                if (null === b)return a.stylize("null", "null")
            }

            function p(a) {
                return "[" + Error.prototype.toString.call(a) + "]"
            }

            function u(a, b, c, d, e) {
                for (var f = [], g = 0, h = b.length; g < h; ++g)Object.prototype.hasOwnProperty.call(b, String(g)) ? f.push(n(a, b, c, d, String(g), !0)) : f.push("");
                e.forEach(function (e) {
                    e.match(/^\d+$/) || f.push(n(a, b, c, d, e, !0))
                });
                return f
            }

            function n(a, b, c, d, e, f) {
                var g, h;
                b = Object.getOwnPropertyDescriptor(b, e) || {value: b[e]};
                b.get ? h = b.set ? a.stylize("[Getter/Setter]",
                            "special") : a.stylize("[Getter]", "special") : b.set && (h = a.stylize("[Setter]", "special"));
                Object.prototype.hasOwnProperty.call(d, e) || (g = "[" + e + "]");
                h || (0 > a.seen.indexOf(b.value) ? (h = null === c ? m(a, b.value, null) : m(a, b.value, c - 1), -1 < h.indexOf("\n") && (h = f ? h.split("\n").map(function (a) {
                            return "  " + a
                        }).join("\n").substr(2) : "\n" + h.split("\n").map(function (a) {
                            return "   " + a
                        }).join("\n"))) : h = a.stylize("[Circular]", "special"));
                if (x(g)) {
                    if (f && e.match(/^\d+$/))return h;
                    g = JSON.stringify("" + e);
                    g.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ?
                        (g = g.substr(1, g.length - 2), g = a.stylize(g, "name")) : (g = g.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), g = a.stylize(g, "string"))
                }
                return g + ": " + h
            }

            function v(a, b, c) {
                var d = 0;
                return 60 < a.reduce(function (a, b) {
                    d++;
                    0 <= b.indexOf("\n") && d++;
                    return a + b.replace(/\u001b\[\d\d?m/g, "").length + 1
                }, 0) ? c[0] + ("" === b ? "" : b + "\n ") + " " + a.join(",\n  ") + " " + c[1] : c[0] + b + " " + a.join(", ") + " " + c[1]
            }

            function t(a) {
                return Array.isArray(a)
            }

            function C(a) {
                return "boolean" === typeof a
            }

            function A(a) {
                return "number" === typeof a
            }

            function y(a) {
                return "string" === typeof a
            }

            function x(a) {
                return void 0 === a
            }

            function q(a) {
                return B(a) && "[object RegExp]" === Object.prototype.toString.call(a)
            }

            function B(a) {
                return "object" === typeof a && null !== a
            }

            function h(a) {
                return B(a) && "[object Date]" === Object.prototype.toString.call(a)
            }

            function w(a) {
                return B(a) && ("[object Error]" === Object.prototype.toString.call(a) || a instanceof Error)
            }

            function z(a) {
                return "function" === typeof a
            }

            function D(a) {
                return 10 > a ? "0" + a.toString(10) : a.toString(10)
            }

            function F() {
                var a =
                    new Date, b = [D(a.getHours()), D(a.getMinutes()), D(a.getSeconds())].join(":");
                return [a.getDate(), J[a.getMonth()], b].join(" ")
            }

            var I = /%[sdj%]/g;
            k.format = function (a) {
                if (!y(a)) {
                    for (var b = [], c = 0; c < arguments.length; c++)b.push(f(arguments[c]));
                    return b.join(" ")
                }
                for (var c = 1, d = arguments, e = d.length, b = String(a).replace(I, function (a) {
                        if ("%%" === a)return "%";
                        if (c >= e)return a;
                        switch (a) {
                            case "%s":
                                return String(d[c++]);
                            case "%d":
                                return Number(d[c++]);
                            case "%j":
                                try {
                                    return JSON.stringify(d[c++])
                                } catch (K) {
                                    return "[Circular]"
                                }
                            default:
                                return a
                        }
                    }),
                         g = d[c]; c < e; g = d[++c])b = null !== g && B(g) ? b + (" " + f(g)) : b + (" " + g);
                return b
            };
            k.deprecate = function (c, d) {
                if (x(b.process))return function () {
                    return k.deprecate(c, d).apply(this, arguments)
                };
                if (!0 === a.noDeprecation)return c;
                var e = !1;
                return function () {
                    if (!e) {
                        if (a.throwDeprecation)throw Error(d);
                        a.traceDeprecation ? console.trace(d) : console.error(d);
                        e = !0
                    }
                    return c.apply(this, arguments)
                }
            };
            var E = {}, H;
            k.debuglog = function (b) {
                x(H) && (H = a.env.NODE_DEBUG || "");
                b = b.toUpperCase();
                if (!E[b])if ((new RegExp("\\b" + b + "\\b", "i")).test(H)) {
                    var c =
                        a.pid;
                    E[b] = function () {
                        var a = k.format.apply(k, arguments);
                        console.error("%s %d: %s", b, c, a)
                    }
                } else E[b] = function () {
                };
                return E[b]
            };
            k.inspect = f;
            f.colors = {
                bold: [1, 22],
                italic: [3, 23],
                underline: [4, 24],
                inverse: [7, 27],
                white: [37, 39],
                grey: [90, 39],
                black: [30, 39],
                blue: [34, 39],
                cyan: [36, 39],
                green: [32, 39],
                magenta: [35, 39],
                red: [31, 39],
                yellow: [33, 39]
            };
            f.styles = {
                special: "cyan",
                number: "yellow",
                "boolean": "yellow",
                undefined: "grey",
                "null": "bold",
                string: "green",
                date: "magenta",
                regexp: "red"
            };
            k.isArray = t;
            k.isBoolean = C;
            k.isNull =
                function (a) {
                    return null === a
                };
            k.isNullOrUndefined = function (a) {
                return null == a
            };
            k.isNumber = A;
            k.isString = y;
            k.isSymbol = function (a) {
                return "symbol" === typeof a
            };
            k.isUndefined = x;
            k.isRegExp = q;
            k.isObject = B;
            k.isDate = h;
            k.isError = w;
            k.isFunction = z;
            k.isPrimitive = function (a) {
                return null === a || "boolean" === typeof a || "number" === typeof a || "string" === typeof a || "symbol" === typeof a || "undefined" === typeof a
            };
            k.isBuffer = g("./support/isBuffer");
            var J = "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" ");
            k.log = function () {
                console.log("%s - %s",
                    F(), k.format.apply(k, arguments))
            };
            k.inherits = g("inherits");
            k._extend = function (a, b) {
                if (!b || !B(b))return a;
                for (var c = Object.keys(b), d = c.length; d--;)a[c[d]] = b[c[d]];
                return a
            }
        }).call(this, g("_process"), "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {})
    }, {"./support/isBuffer": 42, _process: 35, inherits: 41}],
    44: [function (g, m, k) {
        function a(a, d, e) {
            return d ? new b(a, d) : new b(a)
        }

        g = function () {
            return this
        }();
        var b = g.WebSocket || g.MozWebSocket;
        m.exports = b ? a : null;
        b && (a.prototype = b.prototype)
    }, {}],
    45: [function (g, m, k) {
        k.XMLHttpRequest = XMLHttpRequest
    }, {}]
}, {}, [1]);